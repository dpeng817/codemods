{
	"folders": [
		{
			"path": "../.."
		}
	],
	"settings": {},
	"launch": {
		"version": "0.2.0",
		"configurations": [
			{
				"name": "legacyimport: dagster main",
				"type": "python",
				"request": "launch",
				"module": "libcst.tool",
				"args": [
					"codemod",
					"legacy_dagster_imports.LegacyImportCommand",
					"/Users/christopherdecarolis/dagster_2",
					"--imported",
					"AssetGroup",
					"build_assets_job",
					"CompositeSolidDefinition",
					"PipelineDefinition",
					"InputDefinition",
					"Materialization",
					"ModeDefinition",
					"OutputDefinition",
					"PipelineDefinition",
					"PresetDefinition",
					"SolidDefinition",
					"SolidInvocation",
					"DynamicOutputDefinition",
					"composite_solid",
					"lambda_solid",
					"pipeline",
					"solid",
					"pipeline_failure_sensor",
					"CompositeSolidExecutionResult",
					"PipelineExecutionResult",
					"SolidExecutionResult",
					"build_solid_context",
					"PipelineRun",
					"PipelineRunStatus",
					"default_executors",
					"execute_pipeline",
					"execute_pipeline_iterator",
					"execute_solid_within_pipeline",
					"reexecute_pipeline",
				],
				"justMyCode": false
			},
			{
				"name": "legacyimport: internal",
				"type": "python",
				"request": "launch",
				"module": "libcst.tool",
				"args": [
					"codemod",
					"legacy_dagster_imports.LegacyImportCommand",
					"/Users/christopherdecarolis/dagster_2",
					"--imported",
					"AssetGroup",
					"build_assets_job",
					"CompositeSolidDefinition",
					"InputDefinition",
					"Materialization",
					"ModeDefinition",
					"OutputDefinition",
					"PipelineDefinition",
					"PresetDefinition",
					"SolidDefinition",
					"SolidInvocation",
					"DynamicOutputDefinition",
					"composite_solid",
					"lambda_solid",
					"pipeline",
					"solid",
					"pipeline_failure_sensor",
					"CompositeSolidExecutionResult",
					"PipelineExecutionResult",
					"SolidExecutionResult",
					"build_solid_context",
					"PipelineRun",
					"PipelineRunStatus",
					"default_executors",
					"execute_pipeline",
					"execute_pipeline_iterator",
					"execute_solid_within_pipeline",
					"reexecute_pipeline",
				],
				"justMyCode": true
			}
		]
	}
}