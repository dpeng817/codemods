{
	"folders": [
		{
			"path": "../.."
		}
	],
	"settings": {},
	"launch": {
		"version": "0.2.0",
		"configurations": [
			{
				"name": "legacyimport: dagster main",
				"type": "python",
				"request": "launch",
				"module": "libcst.tool",
				"args": [
					"codemod",
					"legacy_dagster_imports.LegacyImportCommand",
					"/Users/christopherdecarolis/dagster_2",
					"--imported",
					"daily_schedule",
					"hourly_schedule",
					"monthly_schedule",
					"weekly_schedule",
					"SolidExecutionContext",
					"PartitionsDefinition",
					"PartitionSetDefinition",
					"DagsterPipelineRunMetadataValue",
					"execute_solid",
					"dagster_type_materializer",
					"DagsterTypeMaterializer",
					"make_python_type_usable_as_dagster_type",
					"schedule_from_partitions",
					"PartitionsDefinition",
					"PartitionSetDefinition",
					"ScheduleExecutionContext",
					"SensorExecutionContext",
					"PipelineFailureSensorContext",
					"create_offset_partition_selector",
					"date_partition_range",
					"identity_partition_selector",
					"custom_path_fs_io_manager",
					"ExperimentalWarning",
					"AssetGroup",
					"build_assets_job",
					"CompositeSolidDefinition",
					"PipelineDefinition",
					"InputDefinition",
					"Materialization",
					"ModeDefinition",
					"OutputDefinition",
					"PipelineDefinition",
					"PresetDefinition",
					"SolidDefinition",
					"SolidInvocation",
					"DynamicOutputDefinition",
					"composite_solid",
					"lambda_solid",
					"pipeline",
					"solid",
					"pipeline_failure_sensor",
					"CompositeSolidExecutionResult",
					"PipelineExecutionResult",
					"SolidExecutionResult",
					"build_solid_context",
					"PipelineRun",
					"PipelineRunStatus",
					"default_executors",
					"execute_pipeline",
					"execute_pipeline_iterator",
					"execute_solid_within_pipeline",
					"reexecute_pipeline",
				],
				"justMyCode": false,
			},
			{
				"name": "dagster: internal",
				"type": "python",
				"request": "launch",
				"module": "libcst.tool",
				"args": [
					"codemod",
					"legacy_dagster_imports.LegacyImportCommand",
					"/Users/christopherdecarolis/internal",
					"--imported",
					"daily_schedule",
					"hourly_schedule",
					"monthly_schedule",
					"weekly_schedule",
					"SolidExecutionContext",
					"PartitionsDefinition",
					"PartitionSetDefinition",
					"DagsterPipelineRunMetadataValue",
					"execute_solid",
					"dagster_type_materializer",
					"DagsterTypeMaterializer",
					"make_python_type_usable_as_dagster_type",
					"schedule_from_partitions",
					"PartitionsDefinition",
					"PartitionSetDefinition",
					"ScheduleExecutionContext",
					"SensorExecutionContext",
					"PipelineFailureSensorContext",
					"create_offset_partition_selector",
					"date_partition_range",
					"identity_partition_selector",
					"custom_path_fs_io_manager",
					"ExperimentalWarning",
					"AssetGroup",
					"build_assets_job",
					"CompositeSolidDefinition",
					"PipelineDefinition",
					"InputDefinition",
					"Materialization",
					"ModeDefinition",
					"OutputDefinition",
					"PipelineDefinition",
					"PresetDefinition",
					"SolidDefinition",
					"SolidInvocation",
					"DynamicOutputDefinition",
					"composite_solid",
					"lambda_solid",
					"pipeline",
					"solid",
					"pipeline_failure_sensor",
					"CompositeSolidExecutionResult",
					"PipelineExecutionResult",
					"SolidExecutionResult",
					"build_solid_context",
					"PipelineRun",
					"PipelineRunStatus",
					"default_executors",
					"execute_pipeline",
					"execute_pipeline_iterator",
					"execute_solid_within_pipeline",
					"reexecute_pipeline",
				],
				"justMyCode": true,
			},
			{
				"name": "test",
				"type": "python",
				"request": "launch",
				"module": "unittest",
				"args": [
					"/Users/christopherdecarolis/codemods/tests/test_codemod_solid.py"
				],
				"justMyCode": false,
			},
			{
				"name": "fix invocations",
				"type": "python",
				"request": "launch",
				"module": "libcst.tool",
				"args": [
					"codemod",
					"invocation_arguments.SwitchInvocationArgumentsCommand",
					"/Users/christopherdecarolis/internal/python_modules",
					"--symbol",
					"schedule",
					"--orig_arg",
					"pipeline_name",
					"--orig_arg_pos",
					"5",
					"--replace_arg",
					"job_name",
				],
				"justMyCode": true,
			},
			{
				"name": "fix invocations 2",
				"type": "python",
				"request": "launch",
				"module": "libcst.tool",
				"args": [
					"codemod",
					"invocation_arguments.SwitchInvocationArgumentsCommand",
					"/Users/christopherdecarolis/dagster_2/python_modules/dagster/dagster_tests",
					"--symbol",
					"sensor",
					"--orig_arg",
					"mode",
					"--orig_arg_pos",
					"2",
				],
				"justMyCode": true,
			},
			{
				"name": "fix input/output_defs on ops",
				"type": "python",
				"request": "launch",
				"module": "libcst.tool",
				"args": [
					"codemod",
					"change_input_output_defs.ChangeInputOutputDefsCommand",
					"/Users/christopherdecarolis/dagster_2/python_modules/dagster/dagster_tests",
				],
				"justMyCode": true,
			},
			{
				"name": "fix ins/outs on graph",
				"type": "python",
				"request": "launch",
				"module": "libcst.tool",
				"args": [
					"codemod",
					"change_input_output_defs_graph.ChangeInputOutputDefsCommand",
					"/Users/christopherdecarolis/dagster_2/python_modules/dagster/dagster_tests",
				],
				"justMyCode": true,
			},
			{
				"name": "replace solid invocations",
				"type": "python",
				"request": "launch",
				"module": "libcst.tool",
				"args": [
					"codemod",
					"codemod_solid.CodemodSolid",
					"/Users/christopherdecarolis/dagster_2",
				],
				"justMyCode": true,
			},
		]
	}
}