{".class": "MypyFile", "_fullname": "libcst.matchers._return_types", "future_import_flags": [], "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "Add": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.Add", "kind": "Gdef"}, "AddAssign": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.AddAssign", "kind": "Gdef"}, "And": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.And", "kind": "Gdef"}, "AnnAssign": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.AnnAssign", "kind": "Gdef"}, "Annotation": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Annotation", "kind": "Gdef"}, "Arg": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Arg", "kind": "Gdef"}, "AsName": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.AsName", "kind": "Gdef"}, "Assert": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.Assert", "kind": "Gdef"}, "Assign": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.Assign", "kind": "Gdef"}, "AssignEqual": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.AssignEqual", "kind": "Gdef"}, "AssignTarget": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.AssignTarget", "kind": "Gdef"}, "Asynchronous": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Asynchronous", "kind": "Gdef"}, "Attribute": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Attribute", "kind": "Gdef"}, "AugAssign": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.AugAssign", "kind": "Gdef"}, "Await": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Await", "kind": "Gdef"}, "BaseAugOp": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.BaseAugOp", "kind": "Gdef"}, "BaseBinaryOp": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.BaseBinaryOp", "kind": "Gdef"}, "BaseBooleanOp": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.BaseBooleanOp", "kind": "Gdef"}, "BaseCompOp": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.BaseCompOp", "kind": "Gdef"}, "BaseDictElement": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.BaseDictElement", "kind": "Gdef"}, "BaseElement": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.BaseElement", "kind": "Gdef"}, "BaseExpression": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.BaseExpression", "kind": "Gdef"}, "BaseFormattedStringContent": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.BaseFormattedStringContent", "kind": "Gdef"}, "BaseParenthesizableWhitespace": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.whitespace.BaseParenthesizableWhitespace", "kind": "Gdef"}, "BaseSlice": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.BaseSlice", "kind": "Gdef"}, "BaseSmallStatement": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.BaseSmallStatement", "kind": "Gdef"}, "BaseStatement": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.BaseStatement", "kind": "Gdef"}, "BaseSuite": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.BaseSuite", "kind": "Gdef"}, "BaseUnaryOp": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.BaseUnaryOp", "kind": "Gdef"}, "BinaryOperation": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.BinaryOperation", "kind": "Gdef"}, "BitAnd": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.BitAnd", "kind": "Gdef"}, "BitAndAssign": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.BitAndAssign", "kind": "Gdef"}, "BitInvert": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.BitInvert", "kind": "Gdef"}, "BitOr": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.BitOr", "kind": "Gdef"}, "BitOrAssign": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.BitOrAssign", "kind": "Gdef"}, "BitXor": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.BitXor", "kind": "Gdef"}, "BitXorAssign": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.BitXorAssign", "kind": "Gdef"}, "BooleanOperation": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.BooleanOperation", "kind": "Gdef"}, "Break": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.Break", "kind": "Gdef"}, "CSTNode": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.base.CSTNode", "kind": "Gdef"}, "Call": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Call", "kind": "Gdef"}, "ClassDef": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.ClassDef", "kind": "Gdef"}, "Colon": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.Colon", "kind": "Gdef"}, "Comma": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.Comma", "kind": "Gdef"}, "Comment": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.whitespace.Comment", "kind": "Gdef"}, "CompFor": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.CompFor", "kind": "Gdef"}, "CompIf": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.CompIf", "kind": "Gdef"}, "Comparison": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Comparison", "kind": "Gdef"}, "ComparisonTarget": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.ComparisonTarget", "kind": "Gdef"}, "ConcatenatedString": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.ConcatenatedString", "kind": "Gdef"}, "Continue": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.Continue", "kind": "Gdef"}, "Decorator": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.Decorator", "kind": "Gdef"}, "Del": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.Del", "kind": "Gdef"}, "Dict": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Dict", "kind": "Gdef"}, "DictComp": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.DictComp", "kind": "Gdef"}, "DictElement": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.DictElement", "kind": "Gdef"}, "Divide": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.Divide", "kind": "Gdef"}, "DivideAssign": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.DivideAssign", "kind": "Gdef"}, "Dot": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.Dot", "kind": "Gdef"}, "Element": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Element", "kind": "Gdef"}, "Ellipsis": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Ellipsis", "kind": "Gdef"}, "Else": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.Else", "kind": "Gdef"}, "EmptyLine": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.whitespace.EmptyLine", "kind": "Gdef"}, "Equal": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.Equal", "kind": "Gdef"}, "ExceptHandler": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.ExceptHandler", "kind": "Gdef"}, "ExceptStarHandler": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.ExceptStarHandler", "kind": "Gdef"}, "Expr": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.Expr", "kind": "Gdef"}, "Finally": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.Finally", "kind": "Gdef"}, "Float": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Float", "kind": "Gdef"}, "FloorDivide": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.FloorDivide", "kind": "Gdef"}, "FloorDivideAssign": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.FloorDivideAssign", "kind": "Gdef"}, "For": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.For", "kind": "Gdef"}, "FormattedString": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.FormattedString", "kind": "Gdef"}, "FormattedStringExpression": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.FormattedStringExpression", "kind": "Gdef"}, "FormattedStringText": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.FormattedStringText", "kind": "Gdef"}, "From": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.From", "kind": "Gdef"}, "FunctionDef": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.FunctionDef", "kind": "Gdef"}, "GeneratorExp": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.GeneratorExp", "kind": "Gdef"}, "Global": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.Global", "kind": "Gdef"}, "GreaterThan": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.GreaterThan", "kind": "Gdef"}, "GreaterThanEqual": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.GreaterThanEqual", "kind": "Gdef"}, "If": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.If", "kind": "Gdef"}, "IfExp": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.IfExp", "kind": "Gdef"}, "Imaginary": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Imaginary", "kind": "Gdef"}, "Import": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.Import", "kind": "Gdef"}, "ImportAlias": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.ImportAlias", "kind": "Gdef"}, "ImportFrom": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.ImportFrom", "kind": "Gdef"}, "ImportStar": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.ImportStar", "kind": "Gdef"}, "In": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.In", "kind": "Gdef"}, "IndentedBlock": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.IndentedBlock", "kind": "Gdef"}, "Index": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Index", "kind": "Gdef"}, "Integer": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Integer", "kind": "Gdef"}, "Is": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.Is", "kind": "Gdef"}, "IsNot": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.IsNot", "kind": "Gdef"}, "Lambda": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Lambda", "kind": "Gdef"}, "LeftCurlyBrace": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.LeftCurlyBrace", "kind": "Gdef"}, "LeftParen": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.LeftParen", "kind": "Gdef"}, "LeftShift": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.LeftShift", "kind": "Gdef"}, "LeftShiftAssign": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.LeftShiftAssign", "kind": "Gdef"}, "LeftSquareBracket": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.LeftSquareBracket", "kind": "Gdef"}, "LessThan": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.LessThan", "kind": "Gdef"}, "LessThanEqual": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.LessThanEqual", "kind": "Gdef"}, "List": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.List", "kind": "Gdef"}, "ListComp": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.ListComp", "kind": "Gdef"}, "Match": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.Match", "kind": "Gdef"}, "MatchAs": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.MatchAs", "kind": "Gdef"}, "MatchCase": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.MatchCase", "kind": "Gdef"}, "MatchClass": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.MatchClass", "kind": "Gdef"}, "MatchKeywordElement": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.MatchKeywordElement", "kind": "Gdef"}, "MatchList": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.MatchList", "kind": "Gdef"}, "MatchMapping": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.MatchMapping", "kind": "Gdef"}, "MatchMappingElement": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.MatchMappingElement", "kind": "Gdef"}, "MatchOr": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.MatchOr", "kind": "Gdef"}, "MatchOrElement": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.MatchOrElement", "kind": "Gdef"}, "MatchPattern": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.MatchPattern", "kind": "Gdef"}, "MatchSequence": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.MatchSequence", "kind": "Gdef"}, "MatchSequenceElement": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.MatchSequenceElement", "kind": "Gdef"}, "MatchSingleton": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.MatchSingleton", "kind": "Gdef"}, "MatchStar": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.MatchStar", "kind": "Gdef"}, "MatchTuple": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.MatchTuple", "kind": "Gdef"}, "MatchValue": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.MatchValue", "kind": "Gdef"}, "MatrixMultiply": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.MatrixMultiply", "kind": "Gdef"}, "MatrixMultiplyAssign": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.MatrixMultiplyAssign", "kind": "Gdef"}, "MaybeSentinel": {".class": "SymbolTableNode", "cross_ref": "libcst._maybe_sentinel.MaybeSentinel", "kind": "Gdef"}, "Minus": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.Minus", "kind": "Gdef"}, "Module": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.module.Module", "kind": "Gdef"}, "Modulo": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.Modulo", "kind": "Gdef"}, "ModuloAssign": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.ModuloAssign", "kind": "Gdef"}, "Multiply": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.Multiply", "kind": "Gdef"}, "MultiplyAssign": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.MultiplyAssign", "kind": "Gdef"}, "Name": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Name", "kind": "Gdef"}, "NameItem": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.NameItem", "kind": "Gdef"}, "NamedExpr": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.NamedExpr", "kind": "Gdef"}, "Newline": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.whitespace.Newline", "kind": "Gdef"}, "Nonlocal": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.Nonlocal", "kind": "Gdef"}, "Not": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.Not", "kind": "Gdef"}, "NotEqual": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.NotEqual", "kind": "Gdef"}, "NotIn": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.NotIn", "kind": "Gdef"}, "Or": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.Or", "kind": "Gdef"}, "Param": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Param", "kind": "Gdef"}, "ParamSlash": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.ParamSlash", "kind": "Gdef"}, "ParamStar": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.ParamStar", "kind": "Gdef"}, "Parameters": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Parameters", "kind": "Gdef"}, "ParenthesizedWhitespace": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.whitespace.ParenthesizedWhitespace", "kind": "Gdef"}, "Pass": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.Pass", "kind": "Gdef"}, "Plus": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.Plus", "kind": "Gdef"}, "Power": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.Power", "kind": "Gdef"}, "PowerAssign": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.PowerAssign", "kind": "Gdef"}, "Raise": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.Raise", "kind": "Gdef"}, "RemovalSentinel": {".class": "SymbolTableNode", "cross_ref": "libcst._removal_sentinel.RemovalSentinel", "kind": "Gdef"}, "Return": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.Return", "kind": "Gdef"}, "RightCurlyBrace": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.RightCurlyBrace", "kind": "Gdef"}, "RightParen": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.RightParen", "kind": "Gdef"}, "RightShift": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.RightShift", "kind": "Gdef"}, "RightShiftAssign": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.RightShiftAssign", "kind": "Gdef"}, "RightSquareBracket": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.RightSquareBracket", "kind": "Gdef"}, "Semicolon": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.Semicolon", "kind": "Gdef"}, "Set": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Set", "kind": "Gdef"}, "SetComp": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.SetComp", "kind": "Gdef"}, "SimpleStatementLine": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.SimpleStatementLine", "kind": "Gdef"}, "SimpleStatementSuite": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.SimpleStatementSuite", "kind": "Gdef"}, "SimpleString": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.SimpleString", "kind": "Gdef"}, "SimpleWhitespace": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.whitespace.SimpleWhitespace", "kind": "Gdef"}, "Slice": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Slice", "kind": "Gdef"}, "StarredDictElement": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.StarredDictElement", "kind": "Gdef"}, "StarredElement": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.StarredElement", "kind": "Gdef"}, "Subscript": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Subscript", "kind": "Gdef"}, "SubscriptElement": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.SubscriptElement", "kind": "Gdef"}, "Subtract": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.Subtract", "kind": "Gdef"}, "SubtractAssign": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.SubtractAssign", "kind": "Gdef"}, "TYPED_FUNCTION_RETURN_MAPPING": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready", "has_explicit_value"], "fullname": "libcst.matchers._return_types.TYPED_FUNCTION_RETURN_MAPPING", "name": "TYPED_FUNCTION_RETURN_MAPPING", "type": {".class": "Instance", "args": [{".class": "TypeType", "item": "libcst._nodes.base.CSTNode"}, "builtins.object"], "type_ref": "builtins.dict"}}}, "TrailingWhitespace": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.whitespace.TrailingWhitespace", "kind": "Gdef"}, "Try": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.Try", "kind": "Gdef"}, "TryStar": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.TryStar", "kind": "Gdef"}, "Tuple": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Tuple", "kind": "Gdef"}, "Type": {".class": "SymbolTableNode", "cross_ref": "typing.Type", "kind": "Gdef"}, "TypingDict": {".class": "SymbolTableNode", "cross_ref": "typing.Dict", "kind": "Gdef"}, "UnaryOperation": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.UnaryOperation", "kind": "Gdef"}, "Union": {".class": "SymbolTableNode", "cross_ref": "typing.Union", "kind": "Gdef"}, "While": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.While", "kind": "Gdef"}, "With": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.With", "kind": "Gdef"}, "WithItem": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.statement.WithItem", "kind": "Gdef"}, "Yield": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Yield", "kind": "Gdef"}, "__annotations__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst.matchers._return_types.__annotations__", "name": "__annotations__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst.matchers._return_types.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst.matchers._return_types.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst.matchers._return_types.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst.matchers._return_types.__package__", "name": "__package__", "type": "builtins.str"}}}, "path": "/Users/christopherdecarolis/.pyenv/versions/3.8.6/envs/internal-workenv-3.8.6/lib/python3.8/site-packages/libcst/matchers/_return_types.py"}