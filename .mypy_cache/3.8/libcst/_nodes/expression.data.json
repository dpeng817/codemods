{".class": "MypyFile", "_fullname": "libcst._nodes.expression", "future_import_flags": [], "is_partial_stub_package": false, "is_stub": false, "names": {".class": "SymbolTable", "ABC": {".class": "SymbolTableNode", "cross_ref": "abc.ABC", "kind": "Gdef"}, "Annotation": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.base.CSTNode"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.Annotation", "name": "Annotation", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.Annotation", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1647, "name": "annotation", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1649, "name": "whitespace_before_indicator", "type": {".class": "UnionType", "items": ["libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._maybe_sentinel.MaybeSentinel"]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1652, "name": "whitespace_after_indicator", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.Annotation", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.Annotation.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "annotation", "whitespace_before_indicator", "whitespace_after_indicator"], "flags": [], "fullname": "libcst._nodes.expression.Annotation.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "annotation", "whitespace_before_indicator", "whitespace_after_indicator"], "arg_types": ["libcst._nodes.expression.Annotation", "libcst._nodes.expression.BaseExpression", {".class": "UnionType", "items": ["libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._maybe_sentinel.MaybeSentinel"]}, "libcst._nodes.whitespace.BaseParenthesizableWhitespace"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Annotation", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Annotation.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.Annotation.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "annotation"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_before_indicator"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after_indicator"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Annotation.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["self", "state", "default_indicator"], "flags": [], "fullname": "libcst._nodes.expression.Annotation._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["self", "state", "default_indicator"], "arg_types": ["libcst._nodes.expression.Annotation", "libcst._nodes.internal.CodegenState", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of Annotation", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.Annotation._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.Annotation", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of Annotation", "ret_type": "libcst._nodes.expression.Annotation", "type_guard": null, "variables": []}}}, "annotation": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.Annotation.annotation", "name": "annotation", "type": "libcst._nodes.expression.BaseExpression"}}, "whitespace_after_indicator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Annotation.whitespace_after_indicator", "name": "whitespace_after_indicator", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}, "whitespace_before_indicator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Annotation.whitespace_before_indicator", "name": "whitespace_before_indicator", "type": {".class": "UnionType", "items": ["libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._maybe_sentinel.MaybeSentinel"]}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Arg": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.base.CSTNode"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.Arg", "name": "Arg", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.Arg", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2165, "name": "value", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2168, "name": "keyword", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.Name", {".class": "NoneType"}]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2171, "name": "equal", "type": {".class": "UnionType", "items": ["libcst._nodes.op.AssignEqual", "libcst._maybe_sentinel.MaybeSentinel"]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2174, "name": "comma", "type": {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2178, "name": "star", "type": {".class": "UnionType", "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": ""}, {".class": "LiteralType", "fallback": "builtins.str", "value": "*"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "**"}]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2182, "name": "whitespace_after_star", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2185, "name": "whitespace_after_arg", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.Arg", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.Arg.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "value", "keyword", "equal", "comma", "star", "whitespace_after_star", "whitespace_after_arg"], "flags": [], "fullname": "libcst._nodes.expression.Arg.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "value", "keyword", "equal", "comma", "star", "whitespace_after_star", "whitespace_after_arg"], "arg_types": ["libcst._nodes.expression.Arg", "libcst._nodes.expression.BaseExpression", {".class": "UnionType", "items": ["libcst._nodes.expression.Name", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["libcst._nodes.op.AssignEqual", "libcst._maybe_sentinel.MaybeSentinel"]}, {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}, {".class": "UnionType", "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": ""}, {".class": "LiteralType", "fallback": "builtins.str", "value": "*"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "**"}]}, "libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._nodes.whitespace.BaseParenthesizableWhitespace"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Arg", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Arg.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.Arg.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "value"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "keyword"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "equal"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "comma"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "star"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after_star"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after_arg"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Arg.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["self", "state", "default_comma"], "flags": [], "fullname": "libcst._nodes.expression.Arg._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["self", "state", "default_comma"], "arg_types": ["libcst._nodes.expression.Arg", "libcst._nodes.internal.CodegenState", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of Arg", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.Arg._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Arg"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of Arg", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.Arg._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.Arg", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of Arg", "ret_type": "libcst._nodes.expression.Arg", "type_guard": null, "variables": []}}}, "comma": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Arg.comma", "name": "comma", "type": {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}}}, "equal": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Arg.equal", "name": "equal", "type": {".class": "UnionType", "items": ["libcst._nodes.op.AssignEqual", "libcst._maybe_sentinel.MaybeSentinel"]}}}, "keyword": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Arg.keyword", "name": "keyword", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.Name", {".class": "NoneType"}]}}}, "star": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Arg.star", "name": "star", "type": {".class": "UnionType", "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": ""}, {".class": "LiteralType", "fallback": "builtins.str", "value": "*"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "**"}]}}}, "value": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.Arg.value", "name": "value", "type": "libcst._nodes.expression.BaseExpression"}}, "whitespace_after_arg": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Arg.whitespace_after_arg", "name": "whitespace_after_arg", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}, "whitespace_after_star": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Arg.whitespace_after_star", "name": "whitespace_after_star", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "AssignEqual": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.AssignEqual", "kind": "Gdef"}, "Asynchronous": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.base.CSTNode"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.Asynchronous", "name": "Asynchronous", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.Asynchronous", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 198, "name": "whitespace_after", "type": "libcst._nodes.whitespace.SimpleWhitespace"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.Asynchronous", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.Asynchronous.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "whitespace_after"], "flags": [], "fullname": "libcst._nodes.expression.Asynchronous.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "whitespace_after"], "arg_types": ["libcst._nodes.expression.Asynchronous", "libcst._nodes.whitespace.SimpleWhitespace"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Asynchronous", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Asynchronous.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.Asynchronous.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Asynchronous.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.Asynchronous._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.Asynchronous", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of Asynchronous", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.Asynchronous._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Asynchronous"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of Asynchronous", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.Asynchronous._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.Asynchronous", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of Asynchronous", "ret_type": "libcst._nodes.expression.Asynchronous", "type_guard": null, "variables": []}}}, "whitespace_after": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Asynchronous.whitespace_after", "name": "whitespace_after", "type": "libcst._nodes.whitespace.SimpleWhitespace"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Attribute": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseAssignTargetExpression", "libcst._nodes.expression.BaseDelTargetExpression"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.Attribute", "name": "Attribute", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.Attribute", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1391, "name": "value", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1394, "name": "attr", "type": "libcst._nodes.expression.Name"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1398, "name": "dot", "type": "libcst._nodes.op.Dot"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1400, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1402, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.Attribute", "libcst._nodes.expression.BaseAssignTargetExpression", "libcst._nodes.expression.BaseDelTargetExpression", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.Attribute.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1, 1, 1], "arg_names": ["self", "value", "attr", "dot", "lpar", "rpar"], "flags": [], "fullname": "libcst._nodes.expression.Attribute.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1, 1], "arg_names": ["self", "value", "attr", "dot", "lpar", "rpar"], "arg_types": ["libcst._nodes.expression.Attribute", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression.Name", "libcst._nodes.op.Dot", {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Attribute", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Attribute.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.Attribute.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "value"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "attr"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "dot"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Attribute.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.Attribute._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.Attribute", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of Attribute", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_safe_to_use_with_word_operator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "flags": [], "fullname": "libcst._nodes.expression.Attribute._safe_to_use_with_word_operator", "name": "_safe_to_use_with_word_operator", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "arg_types": ["libcst._nodes.expression.Attribute", "libcst._nodes.expression.ExpressionPosition"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_safe_to_use_with_word_operator of Attribute", "ret_type": "builtins.bool", "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.Attribute._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.Attribute", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of Attribute", "ret_type": "libcst._nodes.expression.Attribute", "type_guard": null, "variables": []}}}, "attr": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.Attribute.attr", "name": "attr", "type": "libcst._nodes.expression.Name"}}, "dot": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Attribute.dot", "name": "dot", "type": "libcst._nodes.op.Dot"}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Attribute.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Attribute.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}, "value": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.Attribute.value", "name": "value", "type": "libcst._nodes.expression.BaseExpression"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Await": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseExpression"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.Await", "name": "Await", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.Await", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2419, "name": "expression", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2421, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2423, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2427, "name": "whitespace_after_await", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.Await", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.Await.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "expression", "lpar", "rpar", "whitespace_after_await"], "flags": [], "fullname": "libcst._nodes.expression.Await.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1], "arg_names": ["self", "expression", "lpar", "rpar", "whitespace_after_await"], "arg_types": ["libcst._nodes.expression.Await", "libcst._nodes.expression.BaseExpression", {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}, "libcst._nodes.whitespace.BaseParenthesizableWhitespace"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Await", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Await.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.Await.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "expression"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after_await"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Await.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.Await._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.Await", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of Await", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.Await._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Await"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of Await", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.Await._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.Await", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of Await", "ret_type": "libcst._nodes.expression.Await", "type_guard": null, "variables": []}}}, "expression": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.Await.expression", "name": "expression", "type": "libcst._nodes.expression.BaseExpression"}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Await.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Await.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}, "whitespace_after_await": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Await.whitespace_after_await", "name": "whitespace_after_await", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BaseAssignTargetExpression": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": ["_codegen_impl", "_visit_and_replace_children"], "bases": ["libcst._nodes.expression.BaseExpression", "abc.ABC"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.BaseAssignTargetExpression", "name": "BaseAssignTargetExpression", "type_vars": []}, "deletable_attributes": [], "flags": ["is_abstract"], "fullname": "libcst._nodes.expression.BaseAssignTargetExpression", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.BaseAssignTargetExpression", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_classvar", "has_explicit_value", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.BaseAssignTargetExpression.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BaseBinaryOp": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.BaseBinaryOp", "kind": "Gdef"}, "BaseBooleanOp": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.BaseBooleanOp", "kind": "Gdef"}, "BaseComp": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": ["_codegen_impl", "_visit_and_replace_children"], "bases": ["libcst._nodes.expression.BaseExpression", "abc.ABC"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.BaseComp", "name": "BaseComp", "type_vars": []}, "deletable_attributes": [], "flags": ["is_abstract"], "fullname": "libcst._nodes.expression.BaseComp", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.BaseComp", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_classvar", "has_explicit_value", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.BaseComp.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}, "for_in": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "libcst._nodes.expression.BaseComp.for_in", "name": "for_in", "type": "libcst._nodes.expression.CompFor"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BaseCompOp": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.BaseCompOp", "kind": "Gdef"}, "BaseDelTargetExpression": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": ["_codegen_impl", "_visit_and_replace_children"], "bases": ["libcst._nodes.expression.BaseExpression", "abc.ABC"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.BaseDelTargetExpression", "name": "BaseDelTargetExpression", "type_vars": []}, "deletable_attributes": [], "flags": ["is_abstract"], "fullname": "libcst._nodes.expression.BaseDelTargetExpression", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.BaseDelTargetExpression", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_classvar", "has_explicit_value", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.BaseDelTargetExpression.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BaseDict": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": ["_codegen_impl", "_visit_and_replace_children"], "bases": ["libcst._nodes.expression._BaseSetOrDict", "abc.ABC"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.BaseDict", "name": "BaseDict", "type_vars": []}, "deletable_attributes": [], "flags": ["is_abstract"], "fullname": "libcst._nodes.expression.BaseDict", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.BaseDict", "libcst._nodes.expression._BaseSetOrDict", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_classvar", "has_explicit_value", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.BaseDict.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BaseDictElement": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": ["_codegen_impl", "_visit_and_replace_children"], "bases": ["libcst._nodes.expression._BaseElementImpl", "abc.ABC"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.BaseDictElement", "name": "BaseDictElement", "type_vars": []}, "deletable_attributes": [], "flags": ["is_abstract"], "fullname": "libcst._nodes.expression.BaseDictElement", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.BaseDictElement", "libcst._nodes.expression._BaseElementImpl", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_classvar", "has_explicit_value", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.BaseDictElement.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BaseElement": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": ["_codegen_impl", "_visit_and_replace_children"], "bases": ["libcst._nodes.expression._BaseElementImpl", "abc.ABC"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.BaseElement", "name": "BaseElement", "type_vars": []}, "deletable_attributes": [], "flags": ["is_abstract"], "fullname": "libcst._nodes.expression.BaseElement", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.BaseElement", "libcst._nodes.expression._BaseElementImpl", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_classvar", "has_explicit_value", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.BaseElement.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BaseExpression": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": ["_codegen_impl", "_visit_and_replace_children"], "bases": ["libcst._nodes.expression._BaseParenthesizedNode", "abc.ABC"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.BaseExpression", "name": "BaseExpression", "type_vars": []}, "deletable_attributes": [], "flags": ["is_abstract"], "fullname": "libcst._nodes.expression.BaseExpression", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_classvar", "has_explicit_value", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.BaseExpression.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}, "_check_left_right_word_concatenation_safety": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0], "arg_names": ["self", "position", "left", "right"], "flags": [], "fullname": "libcst._nodes.expression.BaseExpression._check_left_right_word_concatenation_safety", "name": "_check_left_right_word_concatenation_safety", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0], "arg_names": ["self", "position", "left", "right"], "arg_types": ["libcst._nodes.expression.BaseExpression", "libcst._nodes.expression.ExpressionPosition", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression.BaseExpression"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_check_left_right_word_concatenation_safety of BaseExpression", "ret_type": "builtins.bool", "type_guard": null, "variables": []}}}, "_safe_to_use_with_word_operator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "flags": [], "fullname": "libcst._nodes.expression.BaseExpression._safe_to_use_with_word_operator", "name": "_safe_to_use_with_word_operator", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "arg_types": ["libcst._nodes.expression.BaseExpression", "libcst._nodes.expression.ExpressionPosition"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_safe_to_use_with_word_operator of BaseExpression", "ret_type": "builtins.bool", "type_guard": null, "variables": []}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BaseFormattedStringContent": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": ["_codegen_impl", "_visit_and_replace_children"], "bases": ["libcst._nodes.base.CSTNode", "abc.ABC"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.BaseFormattedStringContent", "name": "BaseFormattedStringContent", "type_vars": []}, "deletable_attributes": [], "flags": ["is_abstract"], "fullname": "libcst._nodes.expression.BaseFormattedStringContent", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.BaseFormattedStringContent", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_classvar", "has_explicit_value", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.BaseFormattedStringContent.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BaseList": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": ["_codegen_impl", "_visit_and_replace_children"], "bases": ["libcst._nodes.expression.BaseExpression", "abc.ABC"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.BaseList", "name": "BaseList", "type_vars": []}, "deletable_attributes": [], "flags": ["is_abstract"], "fullname": "libcst._nodes.expression.BaseList", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.BaseList", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_classvar", "has_explicit_value", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.BaseList.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}, "_bracketize": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": ["is_generator", "is_decorated"], "fullname": "libcst._nodes.expression.BaseList._bracketize", "name": "_bracketize", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.BaseList", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_bracketize of BaseList", "ret_type": {".class": "Instance", "args": [{".class": "NoneType"}, {".class": "NoneType"}, {".class": "NoneType"}], "type_ref": "typing.Generator"}, "type_guard": null, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "_bracketize", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.BaseList", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_bracketize of BaseList", "ret_type": {".class": "Instance", "args": [{".class": "NoneType"}], "type_ref": "contextlib._GeneratorContextManager"}, "type_guard": null, "variables": []}}}}, "_safe_to_use_with_word_operator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "flags": [], "fullname": "libcst._nodes.expression.BaseList._safe_to_use_with_word_operator", "name": "_safe_to_use_with_word_operator", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "arg_types": ["libcst._nodes.expression.BaseList", "libcst._nodes.expression.ExpressionPosition"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_safe_to_use_with_word_operator of BaseList", "ret_type": "builtins.bool", "type_guard": null, "variables": []}}}, "lbracket": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.BaseList.lbracket", "name": "lbracket", "type": "libcst._nodes.expression.LeftSquareBracket"}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.BaseList.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "rbracket": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.BaseList.rbracket", "name": "rbracket", "type": "libcst._nodes.expression.RightSquareBracket"}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.BaseList.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BaseNumber": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": ["_codegen_impl", "_visit_and_replace_children"], "bases": ["libcst._nodes.expression.BaseExpression", "abc.ABC"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.BaseNumber", "name": "BaseNumber", "type_vars": []}, "deletable_attributes": [], "flags": ["is_abstract"], "fullname": "libcst._nodes.expression.BaseNumber", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.BaseNumber", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_classvar", "has_explicit_value", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.BaseNumber.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}, "_safe_to_use_with_word_operator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "flags": [], "fullname": "libcst._nodes.expression.BaseNumber._safe_to_use_with_word_operator", "name": "_safe_to_use_with_word_operator", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "arg_types": ["libcst._nodes.expression.BaseNumber", "libcst._nodes.expression.ExpressionPosition"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_safe_to_use_with_word_operator of BaseNumber", "ret_type": "builtins.bool", "type_guard": null, "variables": []}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BaseParenthesizableWhitespace": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.whitespace.BaseParenthesizableWhitespace", "kind": "Gdef"}, "BaseSet": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": ["_codegen_impl", "_visit_and_replace_children"], "bases": ["libcst._nodes.expression._BaseSetOrDict", "abc.ABC"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.BaseSet", "name": "BaseSet", "type_vars": []}, "deletable_attributes": [], "flags": ["is_abstract"], "fullname": "libcst._nodes.expression.BaseSet", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.BaseSet", "libcst._nodes.expression._BaseSetOrDict", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_classvar", "has_explicit_value", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.BaseSet.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BaseSimpleComp": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": ["_codegen_impl", "_visit_and_replace_children"], "bases": ["libcst._nodes.expression.BaseComp", "abc.ABC"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.BaseSimpleComp", "name": "BaseSimpleComp", "type_vars": []}, "deletable_attributes": [], "flags": ["is_abstract"], "fullname": "libcst._nodes.expression.BaseSimpleComp", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.BaseSimpleComp", "libcst._nodes.expression.BaseComp", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_classvar", "has_explicit_value", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.BaseSimpleComp.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.BaseSimpleComp._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.BaseSimpleComp"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of BaseSimpleComp", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "elt": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "libcst._nodes.expression.BaseSimpleComp.elt", "name": "elt", "type": "libcst._nodes.expression.BaseAssignTargetExpression"}}, "for_in": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "libcst._nodes.expression.BaseSimpleComp.for_in", "name": "for_in", "type": "libcst._nodes.expression.CompFor"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BaseSlice": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": ["_codegen_impl", "_visit_and_replace_children"], "bases": ["libcst._nodes.base.CSTNode", "abc.ABC"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.BaseSlice", "name": "BaseSlice", "type_vars": []}, "deletable_attributes": [], "flags": ["is_abstract"], "fullname": "libcst._nodes.expression.BaseSlice", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.BaseSlice", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_classvar", "has_explicit_value", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.BaseSlice.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BaseString": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": ["_codegen_impl", "_visit_and_replace_children"], "bases": ["libcst._nodes.expression.BaseExpression", "abc.ABC"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.BaseString", "name": "BaseString", "type_vars": []}, "deletable_attributes": [], "flags": ["is_abstract"], "fullname": "libcst._nodes.expression.BaseString", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.BaseString", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_classvar", "has_explicit_value", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.BaseString.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BaseUnaryOp": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.BaseUnaryOp", "kind": "Gdef"}, "BinaryOperation": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseExpression"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.BinaryOperation", "name": "BinaryOperation", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.BinaryOperation", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1262, "name": "left", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1266, "name": "operator", "type": "libcst._nodes.op.BaseBinaryOp"}, {"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1269, "name": "right", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1271, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1273, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.BinaryOperation", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.BinaryOperation.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0, 1, 1], "arg_names": ["self", "left", "operator", "right", "lpar", "rpar"], "flags": [], "fullname": "libcst._nodes.expression.BinaryOperation.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 1, 1], "arg_names": ["self", "left", "operator", "right", "lpar", "rpar"], "arg_types": ["libcst._nodes.expression.BinaryOperation", "libcst._nodes.expression.BaseExpression", "libcst._nodes.op.BaseBinaryOp", "libcst._nodes.expression.BaseExpression", {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of BinaryOperation", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.BinaryOperation.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.BinaryOperation.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "left"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "operator"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "right"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.BinaryOperation.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.BinaryOperation._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.BinaryOperation", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of BinaryOperation", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_safe_to_use_with_word_operator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "flags": [], "fullname": "libcst._nodes.expression.BinaryOperation._safe_to_use_with_word_operator", "name": "_safe_to_use_with_word_operator", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "arg_types": ["libcst._nodes.expression.BinaryOperation", "libcst._nodes.expression.ExpressionPosition"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_safe_to_use_with_word_operator of BinaryOperation", "ret_type": "builtins.bool", "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.BinaryOperation._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.BinaryOperation", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of BinaryOperation", "ret_type": "libcst._nodes.expression.BinaryOperation", "type_guard": null, "variables": []}}}, "left": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.BinaryOperation.left", "name": "left", "type": "libcst._nodes.expression.BaseExpression"}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.BinaryOperation.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "operator": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.BinaryOperation.operator", "name": "operator", "type": "libcst._nodes.op.BaseBinaryOp"}}, "right": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.BinaryOperation.right", "name": "right", "type": "libcst._nodes.expression.BaseExpression"}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.BinaryOperation.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "BooleanOperation": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseExpression"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.BooleanOperation", "name": "BooleanOperation", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.BooleanOperation", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1315, "name": "left", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1319, "name": "operator", "type": "libcst._nodes.op.BaseBooleanOp"}, {"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1322, "name": "right", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1324, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1326, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.BooleanOperation", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.BooleanOperation.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0, 1, 1], "arg_names": ["self", "left", "operator", "right", "lpar", "rpar"], "flags": [], "fullname": "libcst._nodes.expression.BooleanOperation.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 1, 1], "arg_names": ["self", "left", "operator", "right", "lpar", "rpar"], "arg_types": ["libcst._nodes.expression.BooleanOperation", "libcst._nodes.expression.BaseExpression", "libcst._nodes.op.BaseBooleanOp", "libcst._nodes.expression.BaseExpression", {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of BooleanOperation", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.BooleanOperation.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.BooleanOperation.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "left"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "operator"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "right"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.BooleanOperation.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.BooleanOperation._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.BooleanOperation", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of BooleanOperation", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_safe_to_use_with_word_operator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "flags": [], "fullname": "libcst._nodes.expression.BooleanOperation._safe_to_use_with_word_operator", "name": "_safe_to_use_with_word_operator", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "arg_types": ["libcst._nodes.expression.BooleanOperation", "libcst._nodes.expression.ExpressionPosition"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_safe_to_use_with_word_operator of BooleanOperation", "ret_type": "builtins.bool", "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.BooleanOperation._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.BooleanOperation"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of BooleanOperation", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.BooleanOperation._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.BooleanOperation", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of BooleanOperation", "ret_type": "libcst._nodes.expression.BooleanOperation", "type_guard": null, "variables": []}}}, "left": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.BooleanOperation.left", "name": "left", "type": "libcst._nodes.expression.BaseExpression"}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.BooleanOperation.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "operator": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.BooleanOperation.operator", "name": "operator", "type": "libcst._nodes.op.BaseBooleanOp"}}, "right": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.BooleanOperation.right", "name": "right", "type": "libcst._nodes.expression.BaseExpression"}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.BooleanOperation.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "CSTCodegenError": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.base.CSTCodegenError", "kind": "Gdef"}, "CSTNode": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.base.CSTNode", "kind": "Gdef"}, "CSTValidationError": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.base.CSTValidationError", "kind": "Gdef"}, "CSTVisitorT": {".class": "SymbolTableNode", "cross_ref": "libcst._visitors.CSTVisitorT", "kind": "Gdef"}, "Call": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression._BaseExpressionWithArgs"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.Call", "name": "Call", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.Call", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2350, "name": "func", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2354, "name": "args", "type": {".class": "Instance", "args": ["libcst._nodes.expression.Arg"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2356, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2360, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2363, "name": "whitespace_after_func", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2367, "name": "whitespace_before_args", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.Call", "libcst._nodes.expression._BaseExpressionWithArgs", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.Call.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1, 1, 1], "arg_names": ["self", "func", "args", "lpar", "rpar", "whitespace_after_func", "whitespace_before_args"], "flags": [], "fullname": "libcst._nodes.expression.Call.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1, 1], "arg_names": ["self", "func", "args", "lpar", "rpar", "whitespace_after_func", "whitespace_before_args"], "arg_types": ["libcst._nodes.expression.Call", "libcst._nodes.expression.BaseExpression", {".class": "Instance", "args": ["libcst._nodes.expression.Arg"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}, "libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._nodes.whitespace.BaseParenthesizableWhitespace"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Call", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Call.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.Call.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "func"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "args"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after_func"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_before_args"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Call.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.Call._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.Call", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of Call", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_safe_to_use_with_word_operator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "flags": [], "fullname": "libcst._nodes.expression.Call._safe_to_use_with_word_operator", "name": "_safe_to_use_with_word_operator", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "arg_types": ["libcst._nodes.expression.Call", "libcst._nodes.expression.ExpressionPosition"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_safe_to_use_with_word_operator of Call", "ret_type": "builtins.bool", "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.Call._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.Call", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of Call", "ret_type": "libcst._nodes.expression.Call", "type_guard": null, "variables": []}}}, "args": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Call.args", "name": "args", "type": {".class": "Instance", "args": ["libcst._nodes.expression.Arg"], "type_ref": "typing.Sequence"}}}, "func": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.Call.func", "name": "func", "type": "libcst._nodes.expression.BaseExpression"}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Call.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Call.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}, "whitespace_after_func": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Call.whitespace_after_func", "name": "whitespace_after_func", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}, "whitespace_before_args": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Call.whitespace_before_args", "name": "whitespace_before_args", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Callable": {".class": "SymbolTableNode", "cross_ref": "typing.Callable", "kind": "Gdef"}, "CodegenState": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.internal.CodegenState", "kind": "Gdef"}, "Colon": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.Colon", "kind": "Gdef"}, "Comma": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.Comma", "kind": "Gdef"}, "CompFor": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.base.CSTNode"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.CompFor", "name": "CompFor", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.CompFor", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3296, "name": "target", "type": "libcst._nodes.expression.BaseAssignTargetExpression"}, {"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3299, "name": "iter", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3311, "name": "ifs", "type": {".class": "Instance", "args": ["libcst._nodes.expression.CompIf"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3316, "name": "inner_for_in", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.CompFor", {".class": "NoneType"}]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3319, "name": "asynchronous", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.Asynchronous", {".class": "NoneType"}]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3323, "name": "whitespace_before", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3326, "name": "whitespace_after_for", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3329, "name": "whitespace_before_in", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3332, "name": "whitespace_after_in", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.CompFor", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.CompFor.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "target", "iter", "ifs", "inner_for_in", "asynchronous", "whitespace_before", "whitespace_after_for", "whitespace_before_in", "whitespace_after_in"], "flags": [], "fullname": "libcst._nodes.expression.CompFor.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "target", "iter", "ifs", "inner_for_in", "asynchronous", "whitespace_before", "whitespace_after_for", "whitespace_before_in", "whitespace_after_in"], "arg_types": ["libcst._nodes.expression.CompFor", "libcst._nodes.expression.BaseAssignTargetExpression", "libcst._nodes.expression.BaseExpression", {".class": "Instance", "args": ["libcst._nodes.expression.CompIf"], "type_ref": "typing.Sequence"}, {".class": "UnionType", "items": ["libcst._nodes.expression.CompFor", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["libcst._nodes.expression.Asynchronous", {".class": "NoneType"}]}, "libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._nodes.whitespace.BaseParenthesizableWhitespace"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of CompFor", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.CompFor.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "target"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "iter"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "ifs"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "inner_for_in"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "asynchronous"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_before"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after_for"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_before_in"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after_in"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.CompFor._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.CompFor", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of CompFor", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.CompFor._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.CompFor"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of CompFor", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.CompFor._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.CompFor", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of CompFor", "ret_type": "libcst._nodes.expression.CompFor", "type_guard": null, "variables": []}}}, "asynchronous": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.CompFor.asynchronous", "name": "asynchronous", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.Asynchronous", {".class": "NoneType"}]}}}, "ifs": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.CompFor.ifs", "name": "ifs", "type": {".class": "Instance", "args": ["libcst._nodes.expression.CompIf"], "type_ref": "typing.Sequence"}}}, "inner_for_in": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.CompFor.inner_for_in", "name": "inner_for_in", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.CompFor", {".class": "NoneType"}]}}}, "iter": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.CompFor.iter", "name": "iter", "type": "libcst._nodes.expression.BaseExpression"}}, "target": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.CompFor.target", "name": "target", "type": "libcst._nodes.expression.BaseAssignTargetExpression"}}, "whitespace_after_for": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.CompFor.whitespace_after_for", "name": "whitespace_after_for", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}, "whitespace_after_in": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.CompFor.whitespace_after_in", "name": "whitespace_after_in", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}, "whitespace_before": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.CompFor.whitespace_before", "name": "whitespace_before", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}, "whitespace_before_in": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.CompFor.whitespace_before_in", "name": "whitespace_before_in", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "CompIf": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.base.CSTNode"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.CompIf", "name": "CompIf", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.CompIf", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3439, "name": "test", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3442, "name": "whitespace_before", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3445, "name": "whitespace_before_test", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.CompIf", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.CompIf.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "test", "whitespace_before", "whitespace_before_test"], "flags": [], "fullname": "libcst._nodes.expression.CompIf.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "test", "whitespace_before", "whitespace_before_test"], "arg_types": ["libcst._nodes.expression.CompIf", "libcst._nodes.expression.BaseExpression", "libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._nodes.whitespace.BaseParenthesizableWhitespace"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of CompIf", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.CompIf.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.CompIf.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "test"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_before"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_before_test"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.CompIf.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.CompIf._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.CompIf", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of CompIf", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.CompIf._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.CompIf"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of CompIf", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.CompIf._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.CompIf", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of CompIf", "ret_type": "libcst._nodes.expression.CompIf", "type_guard": null, "variables": []}}}, "test": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.CompIf.test", "name": "test", "type": "libcst._nodes.expression.BaseExpression"}}, "whitespace_before": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.CompIf.whitespace_before", "name": "whitespace_before", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}, "whitespace_before_test": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.CompIf.whitespace_before_test", "name": "whitespace_before_test", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Comparison": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseExpression"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.Comparison", "name": "Comparison", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.Comparison", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1126, "name": "left", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1131, "name": "comparisons", "type": {".class": "Instance", "args": ["libcst._nodes.expression.ComparisonTarget"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1133, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1135, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.Comparison", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.Comparison.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1, 1], "arg_names": ["self", "left", "comparisons", "lpar", "rpar"], "flags": [], "fullname": "libcst._nodes.expression.Comparison.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1], "arg_names": ["self", "left", "comparisons", "lpar", "rpar"], "arg_types": ["libcst._nodes.expression.Comparison", "libcst._nodes.expression.BaseExpression", {".class": "Instance", "args": ["libcst._nodes.expression.ComparisonTarget"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Comparison", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Comparison.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.Comparison.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "left"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "comparisons"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Comparison.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.Comparison._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.Comparison", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of Comparison", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_safe_to_use_with_word_operator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "flags": [], "fullname": "libcst._nodes.expression.Comparison._safe_to_use_with_word_operator", "name": "_safe_to_use_with_word_operator", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "arg_types": ["libcst._nodes.expression.Comparison", "libcst._nodes.expression.ExpressionPosition"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_safe_to_use_with_word_operator of Comparison", "ret_type": "builtins.bool", "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.Comparison._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Comparison"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of Comparison", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.Comparison._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.Comparison", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of Comparison", "ret_type": "libcst._nodes.expression.Comparison", "type_guard": null, "variables": []}}}, "comparisons": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.Comparison.comparisons", "name": "comparisons", "type": {".class": "Instance", "args": ["libcst._nodes.expression.ComparisonTarget"], "type_ref": "typing.Sequence"}}}, "left": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.Comparison.left", "name": "left", "type": "libcst._nodes.expression.BaseExpression"}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Comparison.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Comparison.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "ComparisonTarget": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.base.CSTNode"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.ComparisonTarget", "name": "ComparisonTarget", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.ComparisonTarget", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1064, "name": "operator", "type": "libcst._nodes.op.BaseCompOp"}, {"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1067, "name": "comparator", "type": "libcst._nodes.expression.BaseExpression"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.ComparisonTarget", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.ComparisonTarget.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0], "arg_names": ["self", "operator", "comparator"], "flags": [], "fullname": "libcst._nodes.expression.ComparisonTarget.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0], "arg_names": ["self", "operator", "comparator"], "arg_types": ["libcst._nodes.expression.ComparisonTarget", "libcst._nodes.op.BaseCompOp", "libcst._nodes.expression.BaseExpression"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ComparisonTarget", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.ComparisonTarget.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.ComparisonTarget.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "operator"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "comparator"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.ComparisonTarget.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.ComparisonTarget._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.ComparisonTarget", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of ComparisonTarget", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.ComparisonTarget._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.ComparisonTarget"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of ComparisonTarget", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.ComparisonTarget._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.ComparisonTarget", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of ComparisonTarget", "ret_type": "libcst._nodes.expression.ComparisonTarget", "type_guard": null, "variables": []}}}, "comparator": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.ComparisonTarget.comparator", "name": "comparator", "type": "libcst._nodes.expression.BaseExpression"}}, "operator": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.ComparisonTarget.operator", "name": "operator", "type": "libcst._nodes.op.BaseCompOp"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "ConcatenatedString": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseString"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.ConcatenatedString", "name": "ConcatenatedString", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.ConcatenatedString", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 977, "name": "left", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.SimpleString", "libcst._nodes.expression.FormattedString"]}}, {"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 980, "name": "right", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.SimpleString", "libcst._nodes.expression.FormattedString", "libcst._nodes.expression.ConcatenatedString"]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 982, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 984, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 987, "name": "whitespace_between", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.ConcatenatedString", "libcst._nodes.expression.BaseString", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.ConcatenatedString.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1, 1, 1], "arg_names": ["self", "left", "right", "lpar", "rpar", "whitespace_between"], "flags": [], "fullname": "libcst._nodes.expression.ConcatenatedString.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1, 1], "arg_names": ["self", "left", "right", "lpar", "rpar", "whitespace_between"], "arg_types": ["libcst._nodes.expression.ConcatenatedString", {".class": "UnionType", "items": ["libcst._nodes.expression.SimpleString", "libcst._nodes.expression.FormattedString"]}, {".class": "UnionType", "items": ["libcst._nodes.expression.SimpleString", "libcst._nodes.expression.FormattedString", "libcst._nodes.expression.ConcatenatedString"]}, {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}, "libcst._nodes.whitespace.BaseParenthesizableWhitespace"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ConcatenatedString", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.ConcatenatedString.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.ConcatenatedString.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "left"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "right"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_between"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.ConcatenatedString.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.ConcatenatedString._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.ConcatenatedString", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of ConcatenatedString", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_safe_to_use_with_word_operator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "flags": [], "fullname": "libcst._nodes.expression.ConcatenatedString._safe_to_use_with_word_operator", "name": "_safe_to_use_with_word_operator", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "arg_types": ["libcst._nodes.expression.ConcatenatedString", "libcst._nodes.expression.ExpressionPosition"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_safe_to_use_with_word_operator of ConcatenatedString", "ret_type": "builtins.bool", "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.ConcatenatedString._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.ConcatenatedString"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of ConcatenatedString", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.ConcatenatedString._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.ConcatenatedString", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of ConcatenatedString", "ret_type": "libcst._nodes.expression.ConcatenatedString", "type_guard": null, "variables": []}}}, "evaluated_value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "libcst._nodes.expression.ConcatenatedString.evaluated_value", "name": "evaluated_value", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.ConcatenatedString"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "evaluated_value of ConcatenatedString", "ret_type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "type_guard": null, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "evaluated_value", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.ConcatenatedString"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "evaluated_value of ConcatenatedString", "ret_type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "type_guard": null, "variables": []}}}}, "left": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.ConcatenatedString.left", "name": "left", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.SimpleString", "libcst._nodes.expression.FormattedString"]}}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.ConcatenatedString.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "right": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.ConcatenatedString.right", "name": "right", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.SimpleString", "libcst._nodes.expression.FormattedString", "libcst._nodes.expression.ConcatenatedString"]}}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.ConcatenatedString.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}, "whitespace_between": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.ConcatenatedString.whitespace_between", "name": "whitespace_between", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Dict": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseDict"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.Dict", "name": "Dict", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.Dict", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3226, "name": "elements", "type": {".class": "Instance", "args": ["libcst._nodes.expression.BaseDictElement"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3227, "name": "lbrace", "type": "libcst._nodes.expression.LeftCurlyBrace"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3228, "name": "rbrace", "type": "libcst._nodes.expression.RightCurlyBrace"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3229, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3230, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.Dict", "libcst._nodes.expression.BaseDict", "libcst._nodes.expression._BaseSetOrDict", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.Dict.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1, 1], "arg_names": ["self", "elements", "lbrace", "rbrace", "lpar", "rpar"], "flags": [], "fullname": "libcst._nodes.expression.Dict.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1], "arg_names": ["self", "elements", "lbrace", "rbrace", "lpar", "rpar"], "arg_types": ["libcst._nodes.expression.Dict", {".class": "Instance", "args": ["libcst._nodes.expression.BaseDictElement"], "type_ref": "typing.Sequence"}, "libcst._nodes.expression.LeftCurlyBrace", "libcst._nodes.expression.RightCurlyBrace", {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Dict", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Dict.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.Dict.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "elements"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lbrace"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rbrace"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Dict.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.Dict._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.Dict", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of Dict", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.Dict._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.Dict", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of Dict", "ret_type": "libcst._nodes.expression.Dict", "type_guard": null, "variables": []}}}, "elements": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.Dict.elements", "name": "elements", "type": {".class": "Instance", "args": ["libcst._nodes.expression.BaseDictElement"], "type_ref": "typing.Sequence"}}}, "lbrace": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Dict.lbrace", "name": "lbrace", "type": "libcst._nodes.expression.LeftCurlyBrace"}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Dict.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "rbrace": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Dict.rbrace", "name": "rbrace", "type": "libcst._nodes.expression.RightCurlyBrace"}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Dict.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "DictComp": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseDict", "libcst._nodes.expression.BaseComp"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.DictComp", "name": "DictComp", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.DictComp", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3663, "name": "key", "type": "libcst._nodes.expression.BaseAssignTargetExpression"}, {"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3666, "name": "value", "type": "libcst._nodes.expression.BaseAssignTargetExpression"}, {"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3671, "name": "for_in", "type": "libcst._nodes.expression.CompFor"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3673, "name": "lbrace", "type": "libcst._nodes.expression.LeftCurlyBrace"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3675, "name": "rbrace", "type": "libcst._nodes.expression.RightCurlyBrace"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3677, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3679, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3682, "name": "whitespace_before_colon", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3684, "name": "whitespace_after_colon", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.DictComp", "libcst._nodes.expression.BaseDict", "libcst._nodes.expression._BaseSetOrDict", "libcst._nodes.expression.BaseComp", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.DictComp.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "key", "value", "for_in", "lbrace", "rbrace", "lpar", "rpar", "whitespace_before_colon", "whitespace_after_colon"], "flags": [], "fullname": "libcst._nodes.expression.DictComp.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "key", "value", "for_in", "lbrace", "rbrace", "lpar", "rpar", "whitespace_before_colon", "whitespace_after_colon"], "arg_types": ["libcst._nodes.expression.DictComp", "libcst._nodes.expression.BaseAssignTargetExpression", "libcst._nodes.expression.BaseAssignTargetExpression", "libcst._nodes.expression.CompFor", "libcst._nodes.expression.LeftCurlyBrace", "libcst._nodes.expression.RightCurlyBrace", {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}, "libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._nodes.whitespace.BaseParenthesizableWhitespace"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of DictComp", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.DictComp.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.DictComp.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "key"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "value"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "for_in"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lbrace"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rbrace"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_before_colon"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after_colon"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.DictComp.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.DictComp._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.DictComp", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of DictComp", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.DictComp._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.DictComp"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of DictComp", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.DictComp._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.DictComp", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of DictComp", "ret_type": "libcst._nodes.expression.DictComp", "type_guard": null, "variables": []}}}, "for_in": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.DictComp.for_in", "name": "for_in", "type": "libcst._nodes.expression.CompFor"}}, "key": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.DictComp.key", "name": "key", "type": "libcst._nodes.expression.BaseAssignTargetExpression"}}, "lbrace": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.DictComp.lbrace", "name": "lbrace", "type": "libcst._nodes.expression.LeftCurlyBrace"}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.DictComp.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "rbrace": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.DictComp.rbrace", "name": "rbrace", "type": "libcst._nodes.expression.RightCurlyBrace"}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.DictComp.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}, "value": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.DictComp.value", "name": "value", "type": "libcst._nodes.expression.BaseAssignTargetExpression"}}, "whitespace_after_colon": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.DictComp.whitespace_after_colon", "name": "whitespace_after_colon", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}, "whitespace_before_colon": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.DictComp.whitespace_before_colon", "name": "whitespace_before_colon", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "DictElement": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseDictElement"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.DictElement", "name": "DictElement", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.DictElement", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2783, "name": "key", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2784, "name": "value", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2787, "name": "comma", "type": {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2790, "name": "whitespace_before_colon", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2792, "name": "whitespace_after_colon", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.DictElement", "libcst._nodes.expression.BaseDictElement", "libcst._nodes.expression._BaseElementImpl", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.DictElement.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1, 1, 1], "arg_names": ["self", "key", "value", "comma", "whitespace_before_colon", "whitespace_after_colon"], "flags": [], "fullname": "libcst._nodes.expression.DictElement.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1, 1], "arg_names": ["self", "key", "value", "comma", "whitespace_before_colon", "whitespace_after_colon"], "arg_types": ["libcst._nodes.expression.DictElement", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression.BaseExpression", {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}, "libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._nodes.whitespace.BaseParenthesizableWhitespace"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of DictElement", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.DictElement.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.DictElement.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "key"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "value"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "comma"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_before_colon"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after_colon"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.DictElement.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "state", "default_comma", "default_comma_whitespace"], "flags": [], "fullname": "libcst._nodes.expression.DictElement._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "state", "default_comma", "default_comma_whitespace"], "arg_types": ["libcst._nodes.expression.DictElement", "libcst._nodes.internal.CodegenState", "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of DictElement", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.DictElement._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.DictElement", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of DictElement", "ret_type": "libcst._nodes.expression.DictElement", "type_guard": null, "variables": []}}}, "comma": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.DictElement.comma", "name": "comma", "type": {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}}}, "key": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.DictElement.key", "name": "key", "type": "libcst._nodes.expression.BaseExpression"}}, "value": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.DictElement.value", "name": "value", "type": "libcst._nodes.expression.BaseExpression"}}, "whitespace_after_colon": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.DictElement.whitespace_after_colon", "name": "whitespace_after_colon", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}, "whitespace_before_colon": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.DictElement.whitespace_before_colon", "name": "whitespace_before_colon", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Dot": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.Dot", "kind": "Gdef"}, "Element": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseElement"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.Element", "name": "Element", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.Element", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2749, "name": "value", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2752, "name": "comma", "type": {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.Element", "libcst._nodes.expression.BaseElement", "libcst._nodes.expression._BaseElementImpl", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.Element.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["self", "value", "comma"], "flags": [], "fullname": "libcst._nodes.expression.Element.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["self", "value", "comma"], "arg_types": ["libcst._nodes.expression.Element", "libcst._nodes.expression.BaseExpression", {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Element", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Element.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.Element.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "value"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "comma"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Element.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "state", "default_comma", "default_comma_whitespace"], "flags": [], "fullname": "libcst._nodes.expression.Element._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "state", "default_comma", "default_comma_whitespace"], "arg_types": ["libcst._nodes.expression.Element", "libcst._nodes.internal.CodegenState", "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of Element", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.Element._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.Element", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of Element", "ret_type": "libcst._nodes.expression.Element", "type_guard": null, "variables": []}}}, "comma": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Element.comma", "name": "comma", "type": {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}}}, "value": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.Element.value", "name": "value", "type": "libcst._nodes.expression.BaseExpression"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Ellipsis": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseExpression"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.Ellipsis", "name": "Ellipsis", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.Ellipsis", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 375, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 378, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.Ellipsis", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.Ellipsis.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "lpar", "rpar"], "flags": [], "fullname": "libcst._nodes.expression.Ellipsis.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "lpar", "rpar"], "arg_types": ["libcst._nodes.expression.Ellipsis", {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Ellipsis", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Ellipsis.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.Ellipsis.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Ellipsis.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.Ellipsis._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.Ellipsis", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of Ellipsis", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_safe_to_use_with_word_operator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "flags": [], "fullname": "libcst._nodes.expression.Ellipsis._safe_to_use_with_word_operator", "name": "_safe_to_use_with_word_operator", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "arg_types": ["libcst._nodes.expression.Ellipsis", "libcst._nodes.expression.ExpressionPosition"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_safe_to_use_with_word_operator of Ellipsis", "ret_type": "builtins.bool", "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.Ellipsis._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.Ellipsis", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of Ellipsis", "ret_type": "libcst._nodes.expression.Ellipsis", "type_guard": null, "variables": []}}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Ellipsis.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Ellipsis.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Enum": {".class": "SymbolTableNode", "cross_ref": "enum.Enum", "kind": "Gdef"}, "ExpressionPosition": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["enum.Enum"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.ExpressionPosition", "name": "ExpressionPosition", "type_vars": []}, "deletable_attributes": [], "flags": ["is_enum"], "fullname": "libcst._nodes.expression.ExpressionPosition", "has_param_spec_type": false, "metaclass_type": "enum.EnumMeta", "metadata": {}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.ExpressionPosition", "enum.Enum", "builtins.object"], "names": {".class": "SymbolTable", "LEFT": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_final", "has_explicit_value"], "fullname": "libcst._nodes.expression.ExpressionPosition.LEFT", "name": "LEFT", "type": "enum.auto"}}, "RIGHT": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_final", "has_explicit_value"], "fullname": "libcst._nodes.expression.ExpressionPosition.RIGHT", "name": "RIGHT", "type": "enum.auto"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "FLOATNUMBER_RE": {".class": "SymbolTableNode", "cross_ref": "tokenize.Floatnumber", "kind": "Gdef"}, "Float": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseNumber"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.Float", "name": "Float", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.Float", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 458, "name": "value", "type": "builtins.str"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 460, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 462, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.Float", "libcst._nodes.expression.BaseNumber", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.Float.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "value", "lpar", "rpar"], "flags": [], "fullname": "libcst._nodes.expression.Float.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "value", "lpar", "rpar"], "arg_types": ["libcst._nodes.expression.Float", "builtins.str", {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Float", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Float.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.Float.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "value"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Float.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.Float._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.Float", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of Float", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.Float._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Float"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of Float", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.Float._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.Float", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of Float", "ret_type": "libcst._nodes.expression.Float", "type_guard": null, "variables": []}}}, "evaluated_value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "libcst._nodes.expression.Float.evaluated_value", "name": "evaluated_value", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Float"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "evaluated_value of Float", "ret_type": "builtins.float", "type_guard": null, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "evaluated_value", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Float"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "evaluated_value of Float", "ret_type": "builtins.float", "type_guard": null, "variables": []}}}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Float.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Float.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}, "value": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.Float.value", "name": "value", "type": "builtins.str"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "FormattedString": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression._BasePrefixedString"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.FormattedString", "name": "FormattedString", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.FormattedString", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 892, "name": "parts", "type": {".class": "Instance", "args": ["libcst._nodes.expression.BaseFormattedStringContent"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 896, "name": "start", "type": "builtins.str"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 899, "name": "end", "type": {".class": "UnionType", "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "\""}, {".class": "LiteralType", "fallback": "builtins.str", "value": "'"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "\"\"\""}, {".class": "LiteralType", "fallback": "builtins.str", "value": "'''"}]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 901, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 903, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.FormattedString", "libcst._nodes.expression._BasePrefixedString", "libcst._nodes.expression.BaseString", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.FormattedString.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1, 1], "arg_names": ["self", "parts", "start", "end", "lpar", "rpar"], "flags": [], "fullname": "libcst._nodes.expression.FormattedString.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1], "arg_names": ["self", "parts", "start", "end", "lpar", "rpar"], "arg_types": ["libcst._nodes.expression.FormattedString", {".class": "Instance", "args": ["libcst._nodes.expression.BaseFormattedStringContent"], "type_ref": "typing.Sequence"}, "builtins.str", {".class": "UnionType", "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "\""}, {".class": "LiteralType", "fallback": "builtins.str", "value": "'"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "\"\"\""}, {".class": "LiteralType", "fallback": "builtins.str", "value": "'''"}]}, {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of FormattedString", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.FormattedString.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.FormattedString.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "parts"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "start"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "end"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.FormattedString.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.FormattedString._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.FormattedString", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of FormattedString", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.FormattedString._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.FormattedString"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of FormattedString", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.FormattedString._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.FormattedString", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of FormattedString", "ret_type": "libcst._nodes.expression.FormattedString", "type_guard": null, "variables": []}}}, "end": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.FormattedString.end", "name": "end", "type": {".class": "UnionType", "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "\""}, {".class": "LiteralType", "fallback": "builtins.str", "value": "'"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "\"\"\""}, {".class": "LiteralType", "fallback": "builtins.str", "value": "'''"}]}}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.FormattedString.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "parts": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.FormattedString.parts", "name": "parts", "type": {".class": "Instance", "args": ["libcst._nodes.expression.BaseFormattedStringContent"], "type_ref": "typing.Sequence"}}}, "prefix": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "libcst._nodes.expression.FormattedString.prefix", "name": "prefix", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.FormattedString"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "prefix of FormattedString", "ret_type": "builtins.str", "type_guard": null, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "prefix", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.FormattedString"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "prefix of FormattedString", "ret_type": "builtins.str", "type_guard": null, "variables": []}}}}, "quote": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "libcst._nodes.expression.FormattedString.quote", "name": "quote", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.FormattedString"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "quote of FormattedString", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "libcst._nodes.expression.StringQuoteLiteral"}, "type_guard": null, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "quote", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.FormattedString"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "quote of FormattedString", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "libcst._nodes.expression.StringQuoteLiteral"}, "type_guard": null, "variables": []}}}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.FormattedString.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}, "start": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.FormattedString.start", "name": "start", "type": "builtins.str"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "FormattedStringExpression": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseFormattedStringContent"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.FormattedStringExpression", "name": "FormattedStringExpression", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.FormattedStringExpression", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 766, "name": "expression", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 769, "name": "conversion", "type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 773, "name": "format_spec", "type": {".class": "UnionType", "items": [{".class": "Instance", "args": ["libcst._nodes.expression.BaseFormattedStringContent"], "type_ref": "typing.Sequence"}, {".class": "NoneType"}]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 776, "name": "whitespace_before_expression", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 783, "name": "whitespace_after_expression", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 790, "name": "equal", "type": {".class": "UnionType", "items": ["libcst._nodes.op.AssignEqual", {".class": "NoneType"}]}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.FormattedStringExpression", "libcst._nodes.expression.BaseFormattedStringContent", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.FormattedStringExpression.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1, 1, 1], "arg_names": ["self", "expression", "conversion", "format_spec", "whitespace_before_expression", "whitespace_after_expression", "equal"], "flags": [], "fullname": "libcst._nodes.expression.FormattedStringExpression.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1, 1], "arg_names": ["self", "expression", "conversion", "format_spec", "whitespace_before_expression", "whitespace_after_expression", "equal"], "arg_types": ["libcst._nodes.expression.FormattedStringExpression", "libcst._nodes.expression.BaseExpression", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, {".class": "UnionType", "items": [{".class": "Instance", "args": ["libcst._nodes.expression.BaseFormattedStringContent"], "type_ref": "typing.Sequence"}, {".class": "NoneType"}]}, "libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._nodes.whitespace.BaseParenthesizableWhitespace", {".class": "UnionType", "items": ["libcst._nodes.op.AssignEqual", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of FormattedStringExpression", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.FormattedStringExpression.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.FormattedStringExpression.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "expression"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "conversion"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "format_spec"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_before_expression"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after_expression"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "equal"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.FormattedStringExpression.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.FormattedStringExpression._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.FormattedStringExpression", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of FormattedStringExpression", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.FormattedStringExpression._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.FormattedStringExpression"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of FormattedStringExpression", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.FormattedStringExpression._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.FormattedStringExpression", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of FormattedStringExpression", "ret_type": "libcst._nodes.expression.FormattedStringExpression", "type_guard": null, "variables": []}}}, "conversion": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.FormattedStringExpression.conversion", "name": "conversion", "type": {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}}}, "equal": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.FormattedStringExpression.equal", "name": "equal", "type": {".class": "UnionType", "items": ["libcst._nodes.op.AssignEqual", {".class": "NoneType"}]}}}, "expression": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.FormattedStringExpression.expression", "name": "expression", "type": "libcst._nodes.expression.BaseExpression"}}, "format_spec": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.FormattedStringExpression.format_spec", "name": "format_spec", "type": {".class": "UnionType", "items": [{".class": "Instance", "args": ["libcst._nodes.expression.BaseFormattedStringContent"], "type_ref": "typing.Sequence"}, {".class": "NoneType"}]}}}, "whitespace_after_expression": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.FormattedStringExpression.whitespace_after_expression", "name": "whitespace_after_expression", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}, "whitespace_before_expression": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.FormattedStringExpression.whitespace_before_expression", "name": "whitespace_before_expression", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "FormattedStringText": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseFormattedStringContent"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.FormattedStringText", "name": "FormattedStringText", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.FormattedStringText", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 735, "name": "value", "type": "builtins.str"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.FormattedStringText", "libcst._nodes.expression.BaseFormattedStringContent", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.FormattedStringText.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "value"], "flags": [], "fullname": "libcst._nodes.expression.FormattedStringText.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "value"], "arg_types": ["libcst._nodes.expression.FormattedStringText", "builtins.str"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of FormattedStringText", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.FormattedStringText.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.FormattedStringText.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "value"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.FormattedStringText.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.FormattedStringText._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.FormattedStringText", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of FormattedStringText", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.FormattedStringText._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.FormattedStringText", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of FormattedStringText", "ret_type": "libcst._nodes.expression.FormattedStringText", "type_guard": null, "variables": []}}}, "value": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.FormattedStringText.value", "name": "value", "type": "builtins.str"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "From": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.base.CSTNode"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.From", "name": "From", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.From", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2567, "name": "item", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2570, "name": "whitespace_before_from", "type": {".class": "UnionType", "items": ["libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._maybe_sentinel.MaybeSentinel"]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2575, "name": "whitespace_after_from", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.From", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.From.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "item", "whitespace_before_from", "whitespace_after_from"], "flags": [], "fullname": "libcst._nodes.expression.From.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "item", "whitespace_before_from", "whitespace_after_from"], "arg_types": ["libcst._nodes.expression.From", "libcst._nodes.expression.BaseExpression", {".class": "UnionType", "items": ["libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._maybe_sentinel.MaybeSentinel"]}, "libcst._nodes.whitespace.BaseParenthesizableWhitespace"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of From", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.From.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.From.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "item"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_before_from"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after_from"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.From.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["self", "state", "default_space"], "flags": [], "fullname": "libcst._nodes.expression.From._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["self", "state", "default_space"], "arg_types": ["libcst._nodes.expression.From", "libcst._nodes.internal.CodegenState", "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of From", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.From._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.From"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of From", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.From._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.From", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of From", "ret_type": "libcst._nodes.expression.From", "type_guard": null, "variables": []}}}, "item": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.From.item", "name": "item", "type": "libcst._nodes.expression.BaseExpression"}}, "whitespace_after_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.From.whitespace_after_from", "name": "whitespace_after_from", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}, "whitespace_before_from": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.From.whitespace_before_from", "name": "whitespace_before_from", "type": {".class": "UnionType", "items": ["libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._maybe_sentinel.MaybeSentinel"]}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Generator": {".class": "SymbolTableNode", "cross_ref": "typing.Generator", "kind": "Gdef"}, "GeneratorExp": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseSimpleComp"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.GeneratorExp", "name": "GeneratorExp", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.GeneratorExp", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3528, "name": "elt", "type": "libcst._nodes.expression.BaseAssignTargetExpression"}, {"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3532, "name": "for_in", "type": "libcst._nodes.expression.CompFor"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3534, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3539, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.GeneratorExp", "libcst._nodes.expression.BaseSimpleComp", "libcst._nodes.expression.BaseComp", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.GeneratorExp.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1, 1], "arg_names": ["self", "elt", "for_in", "lpar", "rpar"], "flags": [], "fullname": "libcst._nodes.expression.GeneratorExp.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1], "arg_names": ["self", "elt", "for_in", "lpar", "rpar"], "arg_types": ["libcst._nodes.expression.GeneratorExp", "libcst._nodes.expression.BaseAssignTargetExpression", "libcst._nodes.expression.CompFor", {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of GeneratorExp", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.GeneratorExp.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.GeneratorExp.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "elt"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "for_in"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.GeneratorExp.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.GeneratorExp._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.GeneratorExp", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of GeneratorExp", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_safe_to_use_with_word_operator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "flags": [], "fullname": "libcst._nodes.expression.GeneratorExp._safe_to_use_with_word_operator", "name": "_safe_to_use_with_word_operator", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "arg_types": ["libcst._nodes.expression.GeneratorExp", "libcst._nodes.expression.ExpressionPosition"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_safe_to_use_with_word_operator of GeneratorExp", "ret_type": "builtins.bool", "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.GeneratorExp._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.GeneratorExp", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of GeneratorExp", "ret_type": "libcst._nodes.expression.GeneratorExp", "type_guard": null, "variables": []}}}, "elt": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.GeneratorExp.elt", "name": "elt", "type": "libcst._nodes.expression.BaseAssignTargetExpression"}}, "for_in": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.GeneratorExp.for_in", "name": "for_in", "type": "libcst._nodes.expression.CompFor"}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.GeneratorExp.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.GeneratorExp.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "IMAGNUMBER_RE": {".class": "SymbolTableNode", "cross_ref": "tokenize.Imagnumber", "kind": "Gdef"}, "INTNUMBER_RE": {".class": "SymbolTableNode", "cross_ref": "tokenize.Intnumber", "kind": "Gdef"}, "IfExp": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseExpression"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.IfExp", "name": "IfExp", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.IfExp", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2468, "name": "test", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2471, "name": "body", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2474, "name": "orelse", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2476, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2478, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2481, "name": "whitespace_before_if", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2484, "name": "whitespace_after_if", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2487, "name": "whitespace_before_else", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2490, "name": "whitespace_after_else", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.IfExp", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.IfExp.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "test", "body", "orelse", "lpar", "rpar", "whitespace_before_if", "whitespace_after_if", "whitespace_before_else", "whitespace_after_else"], "flags": [], "fullname": "libcst._nodes.expression.IfExp.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 0, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "test", "body", "orelse", "lpar", "rpar", "whitespace_before_if", "whitespace_after_if", "whitespace_before_else", "whitespace_after_else"], "arg_types": ["libcst._nodes.expression.IfExp", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression.BaseExpression", {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}, "libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._nodes.whitespace.BaseParenthesizableWhitespace"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of IfExp", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.IfExp.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.IfExp.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "test"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "body"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "orelse"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_before_if"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after_if"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_before_else"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after_else"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.IfExp.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.IfExp._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.IfExp", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of IfExp", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.IfExp._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.IfExp"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of IfExp", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.IfExp._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.IfExp", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of IfExp", "ret_type": "libcst._nodes.expression.IfExp", "type_guard": null, "variables": []}}}, "body": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.IfExp.body", "name": "body", "type": "libcst._nodes.expression.BaseExpression"}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.IfExp.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "orelse": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.IfExp.orelse", "name": "orelse", "type": "libcst._nodes.expression.BaseExpression"}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.IfExp.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}, "test": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.IfExp.test", "name": "test", "type": "libcst._nodes.expression.BaseExpression"}}, "whitespace_after_else": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.IfExp.whitespace_after_else", "name": "whitespace_after_else", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}, "whitespace_after_if": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.IfExp.whitespace_after_if", "name": "whitespace_after_if", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}, "whitespace_before_else": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.IfExp.whitespace_before_else", "name": "whitespace_before_else", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}, "whitespace_before_if": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.IfExp.whitespace_before_if", "name": "whitespace_before_if", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Imaginary": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseNumber"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.Imaginary", "name": "Imaginary", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.Imaginary", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 495, "name": "value", "type": "builtins.str"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 497, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 499, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.Imaginary", "libcst._nodes.expression.BaseNumber", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.Imaginary.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "value", "lpar", "rpar"], "flags": [], "fullname": "libcst._nodes.expression.Imaginary.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "value", "lpar", "rpar"], "arg_types": ["libcst._nodes.expression.Imaginary", "builtins.str", {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Imaginary", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Imaginary.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.Imaginary.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "value"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Imaginary.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.Imaginary._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.Imaginary", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of Imaginary", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.Imaginary._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Imaginary"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of Imaginary", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.Imaginary._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.Imaginary", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of Imaginary", "ret_type": "libcst._nodes.expression.Imaginary", "type_guard": null, "variables": []}}}, "evaluated_value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "libcst._nodes.expression.Imaginary.evaluated_value", "name": "evaluated_value", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Imaginary"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "evaluated_value of Imaginary", "ret_type": "builtins.complex", "type_guard": null, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "evaluated_value", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Imaginary"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "evaluated_value of Imaginary", "ret_type": "builtins.complex", "type_guard": null, "variables": []}}}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Imaginary.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Imaginary.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}, "value": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.Imaginary.value", "name": "value", "type": "builtins.str"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "In": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.In", "kind": "Gdef"}, "Index": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseSlice"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.Index", "name": "Index", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.Index", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1445, "name": "value", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1449, "name": "star", "type": {".class": "UnionType", "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "*"}, {".class": "NoneType"}]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1452, "name": "whitespace_after_star", "type": {".class": "UnionType", "items": ["libcst._nodes.whitespace.BaseParenthesizableWhitespace", {".class": "NoneType"}]}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.Index", "libcst._nodes.expression.BaseSlice", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.Index.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "value", "star", "whitespace_after_star"], "flags": [], "fullname": "libcst._nodes.expression.Index.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "value", "star", "whitespace_after_star"], "arg_types": ["libcst._nodes.expression.Index", "libcst._nodes.expression.BaseExpression", {".class": "UnionType", "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "*"}, {".class": "NoneType"}]}, {".class": "UnionType", "items": ["libcst._nodes.whitespace.BaseParenthesizableWhitespace", {".class": "NoneType"}]}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Index", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Index.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.Index.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "value"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "star"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after_star"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Index.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.Index._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.Index", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of Index", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.Index._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.Index", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of Index", "ret_type": "libcst._nodes.expression.Index", "type_guard": null, "variables": []}}}, "star": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Index.star", "name": "star", "type": {".class": "UnionType", "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "*"}, {".class": "NoneType"}]}}}, "value": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.Index.value", "name": "value", "type": "libcst._nodes.expression.BaseExpression"}}, "whitespace_after_star": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Index.whitespace_after_star", "name": "whitespace_after_star", "type": {".class": "UnionType", "items": ["libcst._nodes.whitespace.BaseParenthesizableWhitespace", {".class": "NoneType"}]}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Integer": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseNumber"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.Integer", "name": "Integer", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.Integer", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 420, "name": "value", "type": "builtins.str"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 422, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 424, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.Integer", "libcst._nodes.expression.BaseNumber", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.Integer.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "value", "lpar", "rpar"], "flags": [], "fullname": "libcst._nodes.expression.Integer.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "value", "lpar", "rpar"], "arg_types": ["libcst._nodes.expression.Integer", "builtins.str", {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Integer", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Integer.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.Integer.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "value"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Integer.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.Integer._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.Integer", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of Integer", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.Integer._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Integer"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of Integer", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.Integer._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.Integer", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of Integer", "ret_type": "libcst._nodes.expression.Integer", "type_guard": null, "variables": []}}}, "evaluated_value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "libcst._nodes.expression.Integer.evaluated_value", "name": "evaluated_value", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Integer"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "evaluated_value of Integer", "ret_type": "builtins.int", "type_guard": null, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "evaluated_value", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Integer"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "evaluated_value of Integer", "ret_type": "builtins.int", "type_guard": null, "variables": []}}}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Integer.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Integer.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}, "value": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.Integer.value", "name": "value", "type": "builtins.str"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Is": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.Is", "kind": "Gdef"}, "IsNot": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.IsNot", "kind": "Gdef"}, "Lambda": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseExpression"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.Lambda", "name": "Lambda", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.Lambda", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2071, "name": "params", "type": "libcst._nodes.expression.Parameters"}, {"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2074, "name": "body", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2077, "name": "colon", "type": "libcst._nodes.op.Colon"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2079, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2081, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2084, "name": "whitespace_after_lambda", "type": {".class": "UnionType", "items": ["libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._maybe_sentinel.MaybeSentinel"]}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.Lambda", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.Lambda.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1, 1, 1, 1], "arg_names": ["self", "params", "body", "colon", "lpar", "rpar", "whitespace_after_lambda"], "flags": [], "fullname": "libcst._nodes.expression.Lambda.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1, 1, 1], "arg_names": ["self", "params", "body", "colon", "lpar", "rpar", "whitespace_after_lambda"], "arg_types": ["libcst._nodes.expression.Lambda", "libcst._nodes.expression.Parameters", "libcst._nodes.expression.BaseExpression", "libcst._nodes.op.Colon", {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}, {".class": "UnionType", "items": ["libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._maybe_sentinel.MaybeSentinel"]}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Lambda", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Lambda.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.Lambda.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "params"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "body"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "colon"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after_lambda"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Lambda.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.Lambda._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.Lambda", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of Lambda", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.Lambda._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Lambda"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of Lambda", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.Lambda._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.Lambda", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of Lambda", "ret_type": "libcst._nodes.expression.Lambda", "type_guard": null, "variables": []}}}, "body": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.Lambda.body", "name": "body", "type": "libcst._nodes.expression.BaseExpression"}}, "colon": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Lambda.colon", "name": "colon", "type": "libcst._nodes.op.Colon"}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Lambda.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "params": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.Lambda.params", "name": "params", "type": "libcst._nodes.expression.Parameters"}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Lambda.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}, "whitespace_after_lambda": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Lambda.whitespace_after_lambda", "name": "whitespace_after_lambda", "type": {".class": "UnionType", "items": ["libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._maybe_sentinel.MaybeSentinel"]}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "LeftCurlyBrace": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.base.CSTNode"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.LeftCurlyBrace", "name": "LeftCurlyBrace", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.LeftCurlyBrace", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 106, "name": "whitespace_after", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.LeftCurlyBrace", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.LeftCurlyBrace.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "whitespace_after"], "flags": [], "fullname": "libcst._nodes.expression.LeftCurlyBrace.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "whitespace_after"], "arg_types": ["libcst._nodes.expression.LeftCurlyBrace", "libcst._nodes.whitespace.BaseParenthesizableWhitespace"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of LeftCurlyBrace", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.LeftCurlyBrace.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.LeftCurlyBrace.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.LeftCurlyBrace.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.LeftCurlyBrace._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.LeftCurlyBrace", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of LeftCurlyBrace", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.LeftCurlyBrace._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.LeftCurlyBrace", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of LeftCurlyBrace", "ret_type": "libcst._nodes.expression.LeftCurlyBrace", "type_guard": null, "variables": []}}}, "whitespace_after": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.LeftCurlyBrace.whitespace_after", "name": "whitespace_after", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "LeftParen": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.base.CSTNode"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.LeftParen", "name": "LeftParen", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.LeftParen", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 152, "name": "whitespace_after", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.LeftParen", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.LeftParen.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "whitespace_after"], "flags": [], "fullname": "libcst._nodes.expression.LeftParen.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "whitespace_after"], "arg_types": ["libcst._nodes.expression.LeftParen", "libcst._nodes.whitespace.BaseParenthesizableWhitespace"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of LeftParen", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.LeftParen.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.LeftParen.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.LeftParen.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.LeftParen._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.LeftParen", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of LeftParen", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.LeftParen._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.LeftParen", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of LeftParen", "ret_type": "libcst._nodes.expression.LeftParen", "type_guard": null, "variables": []}}}, "whitespace_after": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.LeftParen.whitespace_after", "name": "whitespace_after", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "LeftSquareBracket": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.base.CSTNode"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.LeftSquareBracket", "name": "LeftSquareBracket", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.LeftSquareBracket", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 60, "name": "whitespace_after", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.LeftSquareBracket", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.LeftSquareBracket.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "whitespace_after"], "flags": [], "fullname": "libcst._nodes.expression.LeftSquareBracket.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "whitespace_after"], "arg_types": ["libcst._nodes.expression.LeftSquareBracket", "libcst._nodes.whitespace.BaseParenthesizableWhitespace"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of LeftSquareBracket", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.LeftSquareBracket.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.LeftSquareBracket.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.LeftSquareBracket.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.LeftSquareBracket._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.LeftSquareBracket", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of LeftSquareBracket", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.LeftSquareBracket._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.LeftSquareBracket", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of LeftSquareBracket", "ret_type": "libcst._nodes.expression.LeftSquareBracket", "type_guard": null, "variables": []}}}, "whitespace_after": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.LeftSquareBracket.whitespace_after", "name": "whitespace_after", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "List": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseList", "libcst._nodes.expression.BaseAssignTargetExpression", "libcst._nodes.expression.BaseDelTargetExpression"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.List", "name": "List", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.List", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3063, "name": "elements", "type": {".class": "Instance", "args": ["libcst._nodes.expression.BaseElement"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3065, "name": "lbracket", "type": "libcst._nodes.expression.LeftSquareBracket"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3067, "name": "rbracket", "type": "libcst._nodes.expression.RightSquareBracket"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3069, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3071, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.List", "libcst._nodes.expression.BaseList", "libcst._nodes.expression.BaseAssignTargetExpression", "libcst._nodes.expression.BaseDelTargetExpression", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.List.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1, 1], "arg_names": ["self", "elements", "lbracket", "rbracket", "lpar", "rpar"], "flags": [], "fullname": "libcst._nodes.expression.List.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1], "arg_names": ["self", "elements", "lbracket", "rbracket", "lpar", "rpar"], "arg_types": ["libcst._nodes.expression.List", {".class": "Instance", "args": ["libcst._nodes.expression.BaseElement"], "type_ref": "typing.Sequence"}, "libcst._nodes.expression.LeftSquareBracket", "libcst._nodes.expression.RightSquareBracket", {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of List", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.List.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.List.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "elements"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lbracket"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rbracket"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.List.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.List._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.List", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of List", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.List._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.List", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of List", "ret_type": "libcst._nodes.expression.List", "type_guard": null, "variables": []}}}, "elements": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.List.elements", "name": "elements", "type": {".class": "Instance", "args": ["libcst._nodes.expression.BaseElement"], "type_ref": "typing.Sequence"}}}, "lbracket": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.List.lbracket", "name": "lbracket", "type": "libcst._nodes.expression.LeftSquareBracket"}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.List.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "rbracket": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.List.rbracket", "name": "rbracket", "type": "libcst._nodes.expression.RightSquareBracket"}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.List.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "ListComp": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseList", "libcst._nodes.expression.BaseSimpleComp"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.ListComp", "name": "ListComp", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.ListComp", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3579, "name": "elt", "type": "libcst._nodes.expression.BaseAssignTargetExpression"}, {"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3583, "name": "for_in", "type": "libcst._nodes.expression.CompFor"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3585, "name": "lbracket", "type": "libcst._nodes.expression.LeftSquareBracket"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3587, "name": "rbracket", "type": "libcst._nodes.expression.RightSquareBracket"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3589, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3591, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.ListComp", "libcst._nodes.expression.BaseList", "libcst._nodes.expression.BaseSimpleComp", "libcst._nodes.expression.BaseComp", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.ListComp.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1, 1, 1, 1], "arg_names": ["self", "elt", "for_in", "lbracket", "rbracket", "lpar", "rpar"], "flags": [], "fullname": "libcst._nodes.expression.ListComp.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1, 1, 1], "arg_names": ["self", "elt", "for_in", "lbracket", "rbracket", "lpar", "rpar"], "arg_types": ["libcst._nodes.expression.ListComp", "libcst._nodes.expression.BaseAssignTargetExpression", "libcst._nodes.expression.CompFor", "libcst._nodes.expression.LeftSquareBracket", "libcst._nodes.expression.RightSquareBracket", {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ListComp", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.ListComp.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.ListComp.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "elt"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "for_in"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lbracket"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rbracket"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.ListComp.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.ListComp._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.ListComp", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of ListComp", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.ListComp._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.ListComp", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of ListComp", "ret_type": "libcst._nodes.expression.ListComp", "type_guard": null, "variables": []}}}, "elt": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.ListComp.elt", "name": "elt", "type": "libcst._nodes.expression.BaseAssignTargetExpression"}}, "for_in": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.ListComp.for_in", "name": "for_in", "type": "libcst._nodes.expression.CompFor"}}, "lbracket": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.ListComp.lbracket", "name": "lbracket", "type": "libcst._nodes.expression.LeftSquareBracket"}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.ListComp.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "rbracket": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.ListComp.rbracket", "name": "rbracket", "type": "libcst._nodes.expression.RightSquareBracket"}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.ListComp.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Literal": {".class": "SymbolTableNode", "cross_ref": "typing_extensions.Literal", "kind": "Gdef"}, "MaybeSentinel": {".class": "SymbolTableNode", "cross_ref": "libcst._maybe_sentinel.MaybeSentinel", "kind": "Gdef"}, "Name": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseAssignTargetExpression", "libcst._nodes.expression.BaseDelTargetExpression"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.Name", "name": "Name", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.Name", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 339, "name": "value", "type": "builtins.str"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 341, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 343, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.Name", "libcst._nodes.expression.BaseAssignTargetExpression", "libcst._nodes.expression.BaseDelTargetExpression", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.Name.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "value", "lpar", "rpar"], "flags": [], "fullname": "libcst._nodes.expression.Name.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "value", "lpar", "rpar"], "arg_types": ["libcst._nodes.expression.Name", "builtins.str", {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Name", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Name.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.Name.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "value"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Name.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.Name._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.Name", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of Name", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.Name._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Name"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of Name", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.Name._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.Name", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of Name", "ret_type": "libcst._nodes.expression.Name", "type_guard": null, "variables": []}}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Name.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Name.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}, "value": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.Name.value", "name": "value", "type": "builtins.str"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "NamedExpr": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseExpression"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.NamedExpr", "name": "NamedExpr", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.NamedExpr", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3739, "name": "target", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3742, "name": "value", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3745, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3747, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3750, "name": "whitespace_before_walrus", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3754, "name": "whitespace_after_walrus", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.NamedExpr", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.NamedExpr.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1, 1, 1, 1], "arg_names": ["self", "target", "value", "lpar", "rpar", "whitespace_before_walrus", "whitespace_after_walrus"], "flags": [], "fullname": "libcst._nodes.expression.NamedExpr.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1, 1, 1], "arg_names": ["self", "target", "value", "lpar", "rpar", "whitespace_before_walrus", "whitespace_after_walrus"], "arg_types": ["libcst._nodes.expression.NamedExpr", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression.BaseExpression", {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}, "libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._nodes.whitespace.BaseParenthesizableWhitespace"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of NamedExpr", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.NamedExpr.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.NamedExpr.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "target"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "value"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_before_walrus"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after_walrus"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.NamedExpr.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.NamedExpr._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.NamedExpr", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of NamedExpr", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.NamedExpr._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.NamedExpr", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of NamedExpr", "ret_type": "libcst._nodes.expression.NamedExpr", "type_guard": null, "variables": []}}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.NamedExpr.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.NamedExpr.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}, "target": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.NamedExpr.target", "name": "target", "type": "libcst._nodes.expression.BaseExpression"}}, "value": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.NamedExpr.value", "name": "value", "type": "libcst._nodes.expression.BaseExpression"}}, "whitespace_after_walrus": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.NamedExpr.whitespace_after_walrus", "name": "whitespace_after_walrus", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}, "whitespace_before_walrus": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.NamedExpr.whitespace_before_walrus", "name": "whitespace_before_walrus", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Not": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.Not", "kind": "Gdef"}, "NotIn": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.op.NotIn", "kind": "Gdef"}, "Optional": {".class": "SymbolTableNode", "cross_ref": "typing.Optional", "kind": "Gdef"}, "Param": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.base.CSTNode"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.Param", "name": "Param", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.Param", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1771, "name": "name", "type": "libcst._nodes.expression.Name"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1775, "name": "annotation", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.Annotation", {".class": "NoneType"}]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1778, "name": "equal", "type": {".class": "UnionType", "items": ["libcst._nodes.op.AssignEqual", "libcst._maybe_sentinel.MaybeSentinel"]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1781, "name": "default", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.BaseExpression", {".class": "NoneType"}]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1785, "name": "comma", "type": {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1789, "name": "star", "type": {".class": "UnionType", "items": ["builtins.str", "libcst._maybe_sentinel.MaybeSentinel"]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1793, "name": "whitespace_after_star", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1796, "name": "whitespace_after_param", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.Param", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.Param.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "name", "annotation", "equal", "default", "comma", "star", "whitespace_after_star", "whitespace_after_param"], "flags": [], "fullname": "libcst._nodes.expression.Param.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "name", "annotation", "equal", "default", "comma", "star", "whitespace_after_star", "whitespace_after_param"], "arg_types": ["libcst._nodes.expression.Param", "libcst._nodes.expression.Name", {".class": "UnionType", "items": ["libcst._nodes.expression.Annotation", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["libcst._nodes.op.AssignEqual", "libcst._maybe_sentinel.MaybeSentinel"]}, {".class": "UnionType", "items": ["libcst._nodes.expression.BaseExpression", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}, {".class": "UnionType", "items": ["builtins.str", "libcst._maybe_sentinel.MaybeSentinel"]}, "libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._nodes.whitespace.BaseParenthesizableWhitespace"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Param", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Param.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.Param.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "name"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "annotation"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "equal"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "default"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "comma"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "star"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after_star"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after_param"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Param.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "state", "default_star", "default_comma"], "flags": [], "fullname": "libcst._nodes.expression.Param._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "state", "default_star", "default_comma"], "arg_types": ["libcst._nodes.expression.Param", "libcst._nodes.internal.CodegenState", {".class": "UnionType", "items": ["builtins.str", {".class": "NoneType"}]}, "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of Param", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.Param._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Param"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of Param", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.Param._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.Param", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of Param", "ret_type": "libcst._nodes.expression.Param", "type_guard": null, "variables": []}}}, "annotation": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Param.annotation", "name": "annotation", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.Annotation", {".class": "NoneType"}]}}}, "comma": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Param.comma", "name": "comma", "type": {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}}}, "default": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Param.default", "name": "default", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.BaseExpression", {".class": "NoneType"}]}}}, "equal": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Param.equal", "name": "equal", "type": {".class": "UnionType", "items": ["libcst._nodes.op.AssignEqual", "libcst._maybe_sentinel.MaybeSentinel"]}}}, "name": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.Param.name", "name": "name", "type": "libcst._nodes.expression.Name"}}, "star": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Param.star", "name": "star", "type": {".class": "UnionType", "items": ["builtins.str", "libcst._maybe_sentinel.MaybeSentinel"]}}}, "whitespace_after_param": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Param.whitespace_after_param", "name": "whitespace_after_param", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}, "whitespace_after_star": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Param.whitespace_after_star", "name": "whitespace_after_star", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "ParamSlash": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.base.CSTNode"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.ParamSlash", "name": "ParamSlash", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.ParamSlash", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1737, "name": "comma", "type": {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1741, "name": "whitespace_after", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.ParamSlash", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.ParamSlash.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1], "arg_names": ["self", "comma", "whitespace_after"], "flags": [], "fullname": "libcst._nodes.expression.ParamSlash.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1], "arg_names": ["self", "comma", "whitespace_after"], "arg_types": ["libcst._nodes.expression.ParamSlash", {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}, "libcst._nodes.whitespace.BaseParenthesizableWhitespace"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ParamSlash", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.ParamSlash.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.ParamSlash.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "comma"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.ParamSlash.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["self", "state", "default_comma"], "flags": [], "fullname": "libcst._nodes.expression.ParamSlash._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["self", "state", "default_comma"], "arg_types": ["libcst._nodes.expression.ParamSlash", "libcst._nodes.internal.CodegenState", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of ParamSlash", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.ParamSlash._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.ParamSlash", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of ParamSlash", "ret_type": "libcst._nodes.expression.ParamSlash", "type_guard": null, "variables": []}}}, "comma": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.ParamSlash.comma", "name": "comma", "type": {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}}}, "whitespace_after": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.ParamSlash.whitespace_after", "name": "whitespace_after", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "ParamStar": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.base.CSTNode"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.ParamStar", "name": "ParamStar", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.ParamStar", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1713, "name": "comma", "type": "libcst._nodes.op.Comma"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.ParamStar", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.ParamStar.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "comma"], "flags": [], "fullname": "libcst._nodes.expression.ParamStar.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "comma"], "arg_types": ["libcst._nodes.expression.ParamStar", "libcst._nodes.op.Comma"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of ParamStar", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.ParamStar.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.ParamStar.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "comma"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.ParamStar.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.ParamStar._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.ParamStar", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of ParamStar", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.ParamStar._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.ParamStar", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of ParamStar", "ret_type": "libcst._nodes.expression.ParamStar", "type_guard": null, "variables": []}}}, "comma": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.ParamStar.comma", "name": "comma", "type": "libcst._nodes.op.Comma"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Parameters": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.base.CSTNode"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.Parameters", "name": "Parameters", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.Parameters", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1870, "name": "params", "type": {".class": "Instance", "args": ["libcst._nodes.expression.Param"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1874, "name": "star_arg", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.Param", "libcst._nodes.expression.ParamStar", "libcst._maybe_sentinel.MaybeSentinel"]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1877, "name": "kwonly_params", "type": {".class": "Instance", "args": ["libcst._nodes.expression.Param"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1880, "name": "star_kwarg", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.Param", {".class": "NoneType"}]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1884, "name": "posonly_params", "type": {".class": "Instance", "args": ["libcst._nodes.expression.Param"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1888, "name": "posonly_ind", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.ParamSlash", "libcst._maybe_sentinel.MaybeSentinel"]}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.Parameters", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.Parameters.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "params", "star_arg", "kwonly_params", "star_kwarg", "posonly_params", "posonly_ind"], "flags": [], "fullname": "libcst._nodes.expression.Parameters.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1, 1, 1], "arg_names": ["self", "params", "star_arg", "kwonly_params", "star_kwarg", "posonly_params", "posonly_ind"], "arg_types": ["libcst._nodes.expression.Parameters", {".class": "Instance", "args": ["libcst._nodes.expression.Param"], "type_ref": "typing.Sequence"}, {".class": "UnionType", "items": ["libcst._nodes.expression.Param", "libcst._nodes.expression.ParamStar", "libcst._maybe_sentinel.MaybeSentinel"]}, {".class": "Instance", "args": ["libcst._nodes.expression.Param"], "type_ref": "typing.Sequence"}, {".class": "UnionType", "items": ["libcst._nodes.expression.Param", {".class": "NoneType"}]}, {".class": "Instance", "args": ["libcst._nodes.expression.Param"], "type_ref": "typing.Sequence"}, {".class": "UnionType", "items": ["libcst._nodes.expression.ParamSlash", "libcst._maybe_sentinel.MaybeSentinel"]}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Parameters", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Parameters.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.Parameters.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "params"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "star_arg"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "kwonly_params"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "star_kwarg"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "posonly_params"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "posonly_ind"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Parameters.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.Parameters._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.Parameters", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of Parameters", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.Parameters._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Parameters"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of Parameters", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate_defaults": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.Parameters._validate_defaults", "name": "_validate_defaults", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Parameters"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate_defaults of Parameters", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate_kwonly_star": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.Parameters._validate_kwonly_star", "name": "_validate_kwonly_star", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Parameters"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate_kwonly_star of Parameters", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate_posonly_ind": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.Parameters._validate_posonly_ind", "name": "_validate_posonly_ind", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Parameters"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate_posonly_ind of Parameters", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate_stars": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.Parameters._validate_stars", "name": "_validate_stars", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Parameters"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate_stars of Parameters", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate_stars_sequence": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 3], "arg_names": ["self", "vals", "section"], "flags": [], "fullname": "libcst._nodes.expression.Parameters._validate_stars_sequence", "name": "_validate_stars_sequence", "type": {".class": "CallableType", "arg_kinds": [0, 0, 3], "arg_names": ["self", "vals", "section"], "arg_types": ["libcst._nodes.expression.Parameters", {".class": "Instance", "args": ["libcst._nodes.expression.Param"], "type_ref": "typing.Sequence"}, "builtins.str"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate_stars_sequence of Parameters", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.Parameters._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.Parameters", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of Parameters", "ret_type": "libcst._nodes.expression.Parameters", "type_guard": null, "variables": []}}}, "kwonly_params": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Parameters.kwonly_params", "name": "kwonly_params", "type": {".class": "Instance", "args": ["libcst._nodes.expression.Param"], "type_ref": "typing.Sequence"}}}, "params": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Parameters.params", "name": "params", "type": {".class": "Instance", "args": ["libcst._nodes.expression.Param"], "type_ref": "typing.Sequence"}}}, "posonly_ind": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Parameters.posonly_ind", "name": "posonly_ind", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.ParamSlash", "libcst._maybe_sentinel.MaybeSentinel"]}}}, "posonly_params": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Parameters.posonly_params", "name": "posonly_params", "type": {".class": "Instance", "args": ["libcst._nodes.expression.Param"], "type_ref": "typing.Sequence"}}}, "star_arg": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Parameters.star_arg", "name": "star_arg", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.Param", "libcst._nodes.expression.ParamStar", "libcst._maybe_sentinel.MaybeSentinel"]}}}, "star_kwarg": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Parameters.star_kwarg", "name": "star_kwarg", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.Param", {".class": "NoneType"}]}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "RightCurlyBrace": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.base.CSTNode"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.RightCurlyBrace", "name": "RightCurlyBrace", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.RightCurlyBrace", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 129, "name": "whitespace_before", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.RightCurlyBrace", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.RightCurlyBrace.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "whitespace_before"], "flags": [], "fullname": "libcst._nodes.expression.RightCurlyBrace.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "whitespace_before"], "arg_types": ["libcst._nodes.expression.RightCurlyBrace", "libcst._nodes.whitespace.BaseParenthesizableWhitespace"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of RightCurlyBrace", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.RightCurlyBrace.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.RightCurlyBrace.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_before"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.RightCurlyBrace.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.RightCurlyBrace._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.RightCurlyBrace", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of RightCurlyBrace", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.RightCurlyBrace._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.RightCurlyBrace", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of RightCurlyBrace", "ret_type": "libcst._nodes.expression.RightCurlyBrace", "type_guard": null, "variables": []}}}, "whitespace_before": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.RightCurlyBrace.whitespace_before", "name": "whitespace_before", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "RightParen": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.base.CSTNode"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.RightParen", "name": "RightParen", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.RightParen", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 175, "name": "whitespace_before", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.RightParen", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.RightParen.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "whitespace_before"], "flags": [], "fullname": "libcst._nodes.expression.RightParen.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "whitespace_before"], "arg_types": ["libcst._nodes.expression.RightParen", "libcst._nodes.whitespace.BaseParenthesizableWhitespace"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of RightParen", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.RightParen.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.RightParen.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_before"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.RightParen.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.RightParen._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.RightParen", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of RightParen", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.RightParen._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.RightParen", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of RightParen", "ret_type": "libcst._nodes.expression.RightParen", "type_guard": null, "variables": []}}}, "whitespace_before": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.RightParen.whitespace_before", "name": "whitespace_before", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "RightSquareBracket": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.base.CSTNode"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.RightSquareBracket", "name": "RightSquareBracket", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.RightSquareBracket", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 83, "name": "whitespace_before", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.RightSquareBracket", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.RightSquareBracket.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1], "arg_names": ["self", "whitespace_before"], "flags": [], "fullname": "libcst._nodes.expression.RightSquareBracket.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1], "arg_names": ["self", "whitespace_before"], "arg_types": ["libcst._nodes.expression.RightSquareBracket", "libcst._nodes.whitespace.BaseParenthesizableWhitespace"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of RightSquareBracket", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.RightSquareBracket.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.RightSquareBracket.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_before"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.RightSquareBracket.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.RightSquareBracket._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.RightSquareBracket", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of RightSquareBracket", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.RightSquareBracket._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.RightSquareBracket", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of RightSquareBracket", "ret_type": "libcst._nodes.expression.RightSquareBracket", "type_guard": null, "variables": []}}}, "whitespace_before": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.RightSquareBracket.whitespace_before", "name": "whitespace_before", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Sequence": {".class": "SymbolTableNode", "cross_ref": "typing.Sequence", "kind": "Gdef"}, "Set": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseSet"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.Set", "name": "Set", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.Set", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3155, "name": "elements", "type": {".class": "Instance", "args": ["libcst._nodes.expression.BaseElement"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3157, "name": "lbrace", "type": "libcst._nodes.expression.LeftCurlyBrace"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3159, "name": "rbrace", "type": "libcst._nodes.expression.RightCurlyBrace"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3161, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3163, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.Set", "libcst._nodes.expression.BaseSet", "libcst._nodes.expression._BaseSetOrDict", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.Set.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1, 1], "arg_names": ["self", "elements", "lbrace", "rbrace", "lpar", "rpar"], "flags": [], "fullname": "libcst._nodes.expression.Set.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1], "arg_names": ["self", "elements", "lbrace", "rbrace", "lpar", "rpar"], "arg_types": ["libcst._nodes.expression.Set", {".class": "Instance", "args": ["libcst._nodes.expression.BaseElement"], "type_ref": "typing.Sequence"}, "libcst._nodes.expression.LeftCurlyBrace", "libcst._nodes.expression.RightCurlyBrace", {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Set", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Set.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.Set.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "elements"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lbrace"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rbrace"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Set.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.Set._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.Set", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of Set", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.Set._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Set"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of Set", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.Set._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.Set", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of Set", "ret_type": "libcst._nodes.expression.Set", "type_guard": null, "variables": []}}}, "elements": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.Set.elements", "name": "elements", "type": {".class": "Instance", "args": ["libcst._nodes.expression.BaseElement"], "type_ref": "typing.Sequence"}}}, "lbrace": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Set.lbrace", "name": "lbrace", "type": "libcst._nodes.expression.LeftCurlyBrace"}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Set.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "rbrace": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Set.rbrace", "name": "rbrace", "type": "libcst._nodes.expression.RightCurlyBrace"}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Set.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "SetComp": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseSet", "libcst._nodes.expression.BaseSimpleComp"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.SetComp", "name": "SetComp", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.SetComp", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3621, "name": "elt", "type": "libcst._nodes.expression.BaseAssignTargetExpression"}, {"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3625, "name": "for_in", "type": "libcst._nodes.expression.CompFor"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3627, "name": "lbrace", "type": "libcst._nodes.expression.LeftCurlyBrace"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3629, "name": "rbrace", "type": "libcst._nodes.expression.RightCurlyBrace"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3631, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 3633, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.SetComp", "libcst._nodes.expression.BaseSet", "libcst._nodes.expression._BaseSetOrDict", "libcst._nodes.expression.BaseSimpleComp", "libcst._nodes.expression.BaseComp", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.SetComp.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1, 1, 1, 1], "arg_names": ["self", "elt", "for_in", "lbrace", "rbrace", "lpar", "rpar"], "flags": [], "fullname": "libcst._nodes.expression.SetComp.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1, 1, 1], "arg_names": ["self", "elt", "for_in", "lbrace", "rbrace", "lpar", "rpar"], "arg_types": ["libcst._nodes.expression.SetComp", "libcst._nodes.expression.BaseAssignTargetExpression", "libcst._nodes.expression.CompFor", "libcst._nodes.expression.LeftCurlyBrace", "libcst._nodes.expression.RightCurlyBrace", {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of SetComp", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.SetComp.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.SetComp.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "elt"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "for_in"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lbrace"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rbrace"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.SetComp.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.SetComp._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.SetComp", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of SetComp", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.SetComp._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.SetComp", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of SetComp", "ret_type": "libcst._nodes.expression.SetComp", "type_guard": null, "variables": []}}}, "elt": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.SetComp.elt", "name": "elt", "type": "libcst._nodes.expression.BaseAssignTargetExpression"}}, "for_in": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.SetComp.for_in", "name": "for_in", "type": "libcst._nodes.expression.CompFor"}}, "lbrace": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.SetComp.lbrace", "name": "lbrace", "type": "libcst._nodes.expression.LeftCurlyBrace"}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.SetComp.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "rbrace": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.SetComp.rbrace", "name": "rbrace", "type": "libcst._nodes.expression.RightCurlyBrace"}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.SetComp.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "SimpleString": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression._BasePrefixedString"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.SimpleString", "name": "SimpleString", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.SimpleString", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 588, "name": "value", "type": "builtins.str"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 590, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 592, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.SimpleString", "libcst._nodes.expression._BasePrefixedString", "libcst._nodes.expression.BaseString", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.SimpleString.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "value", "lpar", "rpar"], "flags": [], "fullname": "libcst._nodes.expression.SimpleString.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "value", "lpar", "rpar"], "arg_types": ["libcst._nodes.expression.SimpleString", "builtins.str", {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of SimpleString", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.SimpleString.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.SimpleString.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "value"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.SimpleString.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.SimpleString._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.SimpleString", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of SimpleString", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.SimpleString._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.SimpleString"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of SimpleString", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.SimpleString._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.SimpleString", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of SimpleString", "ret_type": "libcst._nodes.expression.SimpleString", "type_guard": null, "variables": []}}}, "evaluated_value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "libcst._nodes.expression.SimpleString.evaluated_value", "name": "evaluated_value", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.SimpleString"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "evaluated_value of SimpleString", "ret_type": "builtins.str", "type_guard": null, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "evaluated_value", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.SimpleString"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "evaluated_value of SimpleString", "ret_type": "builtins.str", "type_guard": null, "variables": []}}}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.SimpleString.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "prefix": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "libcst._nodes.expression.SimpleString.prefix", "name": "prefix", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.SimpleString"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "prefix of SimpleString", "ret_type": "builtins.str", "type_guard": null, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "prefix", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.SimpleString"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "prefix of SimpleString", "ret_type": "builtins.str", "type_guard": null, "variables": []}}}}, "quote": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "libcst._nodes.expression.SimpleString.quote", "name": "quote", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.SimpleString"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "quote of SimpleString", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "libcst._nodes.expression.StringQuoteLiteral"}, "type_guard": null, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "quote", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.SimpleString"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "quote of SimpleString", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "libcst._nodes.expression.StringQuoteLiteral"}, "type_guard": null, "variables": []}}}}, "raw_value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "libcst._nodes.expression.SimpleString.raw_value", "name": "raw_value", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.SimpleString"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "raw_value of SimpleString", "ret_type": "builtins.str", "type_guard": null, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "raw_value", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.SimpleString"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "raw_value of SimpleString", "ret_type": "builtins.str", "type_guard": null, "variables": []}}}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.SimpleString.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}, "value": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.SimpleString.value", "name": "value", "type": "builtins.str"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "SimpleWhitespace": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.whitespace.SimpleWhitespace", "kind": "Gdef"}, "Slice": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseSlice"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.Slice", "name": "Slice", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.Slice", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1484, "name": "lower", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.BaseExpression", {".class": "NoneType"}]}}, {"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1487, "name": "upper", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.BaseExpression", {".class": "NoneType"}]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1490, "name": "step", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.BaseExpression", {".class": "NoneType"}]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1493, "name": "first_colon", "type": "libcst._nodes.op.Colon"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1496, "name": "second_colon", "type": {".class": "UnionType", "items": ["libcst._nodes.op.Colon", "libcst._maybe_sentinel.MaybeSentinel"]}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.Slice", "libcst._nodes.expression.BaseSlice", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.Slice.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1, 1, 1], "arg_names": ["self", "lower", "upper", "step", "first_colon", "second_colon"], "flags": [], "fullname": "libcst._nodes.expression.Slice.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1, 1], "arg_names": ["self", "lower", "upper", "step", "first_colon", "second_colon"], "arg_types": ["libcst._nodes.expression.Slice", {".class": "UnionType", "items": ["libcst._nodes.expression.BaseExpression", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["libcst._nodes.expression.BaseExpression", {".class": "NoneType"}]}, {".class": "UnionType", "items": ["libcst._nodes.expression.BaseExpression", {".class": "NoneType"}]}, "libcst._nodes.op.Colon", {".class": "UnionType", "items": ["libcst._nodes.op.Colon", "libcst._maybe_sentinel.MaybeSentinel"]}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Slice", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Slice.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.Slice.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "lower"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "upper"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "step"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "first_colon"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "second_colon"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Slice.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.Slice._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.Slice", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of Slice", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.Slice._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.Slice", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of Slice", "ret_type": "libcst._nodes.expression.Slice", "type_guard": null, "variables": []}}}, "first_colon": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Slice.first_colon", "name": "first_colon", "type": "libcst._nodes.op.Colon"}}, "lower": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.Slice.lower", "name": "lower", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.BaseExpression", {".class": "NoneType"}]}}}, "second_colon": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Slice.second_colon", "name": "second_colon", "type": {".class": "UnionType", "items": ["libcst._nodes.op.Colon", "libcst._maybe_sentinel.MaybeSentinel"]}}}, "step": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Slice.step", "name": "step", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.BaseExpression", {".class": "NoneType"}]}}}, "upper": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.Slice.upper", "name": "upper", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.BaseExpression", {".class": "NoneType"}]}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "StarredDictElement": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseDictElement"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.StarredDictElement", "name": "StarredDictElement", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.StarredDictElement", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2898, "name": "value", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2901, "name": "comma", "type": {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2904, "name": "whitespace_before_value", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.StarredDictElement", "libcst._nodes.expression.BaseDictElement", "libcst._nodes.expression._BaseElementImpl", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.StarredDictElement.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "value", "comma", "whitespace_before_value"], "flags": [], "fullname": "libcst._nodes.expression.StarredDictElement.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "value", "comma", "whitespace_before_value"], "arg_types": ["libcst._nodes.expression.StarredDictElement", "libcst._nodes.expression.BaseExpression", {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}, "libcst._nodes.whitespace.BaseParenthesizableWhitespace"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of StarredDictElement", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.StarredDictElement.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.StarredDictElement.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "value"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "comma"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_before_value"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.StarredDictElement.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "state", "default_comma", "default_comma_whitespace"], "flags": [], "fullname": "libcst._nodes.expression.StarredDictElement._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "state", "default_comma", "default_comma_whitespace"], "arg_types": ["libcst._nodes.expression.StarredDictElement", "libcst._nodes.internal.CodegenState", "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of StarredDictElement", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.StarredDictElement._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.StarredDictElement", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of StarredDictElement", "ret_type": "libcst._nodes.expression.StarredDictElement", "type_guard": null, "variables": []}}}, "comma": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.StarredDictElement.comma", "name": "comma", "type": {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}}}, "value": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.StarredDictElement.value", "name": "value", "type": "libcst._nodes.expression.BaseExpression"}}, "whitespace_before_value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.StarredDictElement.whitespace_before_value", "name": "whitespace_before_value", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "StarredElement": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseElement", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.StarredElement", "name": "StarredElement", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.StarredElement", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2846, "name": "value", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2849, "name": "comma", "type": {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2852, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2854, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2857, "name": "whitespace_before_value", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.StarredElement", "libcst._nodes.expression.BaseElement", "libcst._nodes.expression._BaseElementImpl", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.StarredElement.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1, 1, 1], "arg_names": ["self", "value", "comma", "lpar", "rpar", "whitespace_before_value"], "flags": [], "fullname": "libcst._nodes.expression.StarredElement.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1, 1, 1], "arg_names": ["self", "value", "comma", "lpar", "rpar", "whitespace_before_value"], "arg_types": ["libcst._nodes.expression.StarredElement", "libcst._nodes.expression.BaseExpression", {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}, {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}, "libcst._nodes.whitespace.BaseParenthesizableWhitespace"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of StarredElement", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.StarredElement.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.StarredElement.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "value"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "comma"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_before_value"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.StarredElement.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "state", "default_comma", "default_comma_whitespace"], "flags": [], "fullname": "libcst._nodes.expression.StarredElement._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "state", "default_comma", "default_comma_whitespace"], "arg_types": ["libcst._nodes.expression.StarredElement", "libcst._nodes.internal.CodegenState", "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of StarredElement", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.StarredElement._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.StarredElement", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of StarredElement", "ret_type": "libcst._nodes.expression.StarredElement", "type_guard": null, "variables": []}}}, "comma": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.StarredElement.comma", "name": "comma", "type": {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.StarredElement.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.StarredElement.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}, "value": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.StarredElement.value", "name": "value", "type": "libcst._nodes.expression.BaseExpression"}}, "whitespace_before_value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.StarredElement.whitespace_before_value", "name": "whitespace_before_value", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "StringQuoteLiteral": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeAlias", "alias_tvars": [], "column": 0, "fullname": "libcst._nodes.expression.StringQuoteLiteral", "line": 534, "no_args": false, "normalized": false, "target": {".class": "UnionType", "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "\""}, {".class": "LiteralType", "fallback": "builtins.str", "value": "'"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "\"\"\""}, {".class": "LiteralType", "fallback": "builtins.str", "value": "'''"}]}}}, "Subscript": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseAssignTargetExpression", "libcst._nodes.expression.BaseDelTargetExpression"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.Subscript", "name": "Subscript", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.Subscript", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1571, "name": "value", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1574, "name": "slice", "type": {".class": "Instance", "args": ["libcst._nodes.expression.SubscriptElement"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1576, "name": "lbracket", "type": "libcst._nodes.expression.LeftSquareBracket"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1578, "name": "rbracket", "type": "libcst._nodes.expression.RightSquareBracket"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1580, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1582, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1585, "name": "whitespace_after_value", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.Subscript", "libcst._nodes.expression.BaseAssignTargetExpression", "libcst._nodes.expression.BaseDelTargetExpression", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.Subscript.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1, 1, 1, 1, 1], "arg_names": ["self", "value", "slice", "lbracket", "rbracket", "lpar", "rpar", "whitespace_after_value"], "flags": [], "fullname": "libcst._nodes.expression.Subscript.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1, 1, 1, 1], "arg_names": ["self", "value", "slice", "lbracket", "rbracket", "lpar", "rpar", "whitespace_after_value"], "arg_types": ["libcst._nodes.expression.Subscript", "libcst._nodes.expression.BaseExpression", {".class": "Instance", "args": ["libcst._nodes.expression.SubscriptElement"], "type_ref": "typing.Sequence"}, "libcst._nodes.expression.LeftSquareBracket", "libcst._nodes.expression.RightSquareBracket", {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}, "libcst._nodes.whitespace.BaseParenthesizableWhitespace"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Subscript", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Subscript.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.Subscript.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "value"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "slice"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lbracket"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rbracket"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after_value"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Subscript.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.Subscript._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.Subscript", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of Subscript", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_safe_to_use_with_word_operator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "flags": [], "fullname": "libcst._nodes.expression.Subscript._safe_to_use_with_word_operator", "name": "_safe_to_use_with_word_operator", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "arg_types": ["libcst._nodes.expression.Subscript", "libcst._nodes.expression.ExpressionPosition"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_safe_to_use_with_word_operator of Subscript", "ret_type": "builtins.bool", "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.Subscript._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Subscript"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of Subscript", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.Subscript._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.Subscript", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of Subscript", "ret_type": "libcst._nodes.expression.Subscript", "type_guard": null, "variables": []}}}, "lbracket": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Subscript.lbracket", "name": "lbracket", "type": "libcst._nodes.expression.LeftSquareBracket"}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Subscript.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "rbracket": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Subscript.rbracket", "name": "rbracket", "type": "libcst._nodes.expression.RightSquareBracket"}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Subscript.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}, "slice": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.Subscript.slice", "name": "slice", "type": {".class": "Instance", "args": ["libcst._nodes.expression.SubscriptElement"], "type_ref": "typing.Sequence"}}}, "value": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.Subscript.value", "name": "value", "type": "libcst._nodes.expression.BaseExpression"}}, "whitespace_after_value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Subscript.whitespace_after_value", "name": "whitespace_after_value", "type": "libcst._nodes.whitespace.BaseParenthesizableWhitespace"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "SubscriptElement": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.base.CSTNode"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.SubscriptElement", "name": "SubscriptElement", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.SubscriptElement", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1539, "name": "slice", "type": "libcst._nodes.expression.BaseSlice"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1542, "name": "comma", "type": {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.SubscriptElement", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.SubscriptElement.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["self", "slice", "comma"], "flags": [], "fullname": "libcst._nodes.expression.SubscriptElement.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["self", "slice", "comma"], "arg_types": ["libcst._nodes.expression.SubscriptElement", "libcst._nodes.expression.BaseSlice", {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of SubscriptElement", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.SubscriptElement.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.SubscriptElement.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "slice"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "comma"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.SubscriptElement.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1], "arg_names": ["self", "state", "default_comma"], "flags": [], "fullname": "libcst._nodes.expression.SubscriptElement._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1], "arg_names": ["self", "state", "default_comma"], "arg_types": ["libcst._nodes.expression.SubscriptElement", "libcst._nodes.internal.CodegenState", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of SubscriptElement", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.SubscriptElement._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.SubscriptElement", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of SubscriptElement", "ret_type": "libcst._nodes.expression.SubscriptElement", "type_guard": null, "variables": []}}}, "comma": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.SubscriptElement.comma", "name": "comma", "type": {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}}}, "slice": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.SubscriptElement.slice", "name": "slice", "type": "libcst._nodes.expression.BaseSlice"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Tuple": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseAssignTargetExpression", "libcst._nodes.expression.BaseDelTargetExpression"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.Tuple", "name": "Tuple", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.Tuple", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2949, "name": "elements", "type": {".class": "Instance", "args": ["libcst._nodes.expression.BaseElement"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2951, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2953, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.Tuple", "libcst._nodes.expression.BaseAssignTargetExpression", "libcst._nodes.expression.BaseDelTargetExpression", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.Tuple.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "elements", "lpar", "rpar"], "flags": [], "fullname": "libcst._nodes.expression.Tuple.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "elements", "lpar", "rpar"], "arg_types": ["libcst._nodes.expression.Tuple", {".class": "Instance", "args": ["libcst._nodes.expression.BaseElement"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Tuple", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Tuple.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.Tuple.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "elements"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Tuple.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.Tuple._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.Tuple", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of Tuple", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_safe_to_use_with_word_operator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "flags": [], "fullname": "libcst._nodes.expression.Tuple._safe_to_use_with_word_operator", "name": "_safe_to_use_with_word_operator", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "arg_types": ["libcst._nodes.expression.Tuple", "libcst._nodes.expression.ExpressionPosition"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_safe_to_use_with_word_operator of Tuple", "ret_type": "builtins.bool", "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.Tuple._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Tuple"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of Tuple", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.Tuple._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.Tuple", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of Tuple", "ret_type": "libcst._nodes.expression.Tuple", "type_guard": null, "variables": []}}}, "elements": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.Tuple.elements", "name": "elements", "type": {".class": "Instance", "args": ["libcst._nodes.expression.BaseElement"], "type_ref": "typing.Sequence"}}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Tuple.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Tuple.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "UnaryOperation": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseExpression"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.UnaryOperation", "name": "UnaryOperation", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.UnaryOperation", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1193, "name": "operator", "type": "libcst._nodes.op.BaseUnaryOp"}, {"column": 4, "has_default": false, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1197, "name": "expression", "type": "libcst._nodes.expression.BaseExpression"}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1199, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 1201, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.UnaryOperation", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.UnaryOperation.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 0, 1, 1], "arg_names": ["self", "operator", "expression", "lpar", "rpar"], "flags": [], "fullname": "libcst._nodes.expression.UnaryOperation.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 0, 0, 1, 1], "arg_names": ["self", "operator", "expression", "lpar", "rpar"], "arg_types": ["libcst._nodes.expression.UnaryOperation", "libcst._nodes.op.BaseUnaryOp", "libcst._nodes.expression.BaseExpression", {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of UnaryOperation", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.UnaryOperation.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.UnaryOperation.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "operator"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "expression"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.UnaryOperation.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.UnaryOperation._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.UnaryOperation", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of UnaryOperation", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_safe_to_use_with_word_operator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "flags": [], "fullname": "libcst._nodes.expression.UnaryOperation._safe_to_use_with_word_operator", "name": "_safe_to_use_with_word_operator", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "arg_types": ["libcst._nodes.expression.UnaryOperation", "libcst._nodes.expression.ExpressionPosition"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_safe_to_use_with_word_operator of UnaryOperation", "ret_type": "builtins.bool", "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.UnaryOperation._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.UnaryOperation"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of UnaryOperation", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.UnaryOperation._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.UnaryOperation", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of UnaryOperation", "ret_type": "libcst._nodes.expression.UnaryOperation", "type_guard": null, "variables": []}}}, "expression": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.UnaryOperation.expression", "name": "expression", "type": "libcst._nodes.expression.BaseExpression"}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.UnaryOperation.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "operator": {".class": "SymbolTableNode", "implicit": true, "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": "libcst._nodes.expression.UnaryOperation.operator", "name": "operator", "type": "libcst._nodes.op.BaseUnaryOp"}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.UnaryOperation.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "Union": {".class": "SymbolTableNode", "cross_ref": "typing.Union", "kind": "Gdef"}, "Yield": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": [], "bases": ["libcst._nodes.expression.BaseExpression"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression.Yield", "name": "Yield", "type_vars": []}, "deletable_attributes": [], "flags": [], "fullname": "libcst._nodes.expression.Yield", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {"dataclass": {"attributes": [{"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2624, "name": "value", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.BaseExpression", "libcst._nodes.expression.From", {".class": "NoneType"}]}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2626, "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2628, "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}, {"column": 4, "has_default": true, "is_in_init": true, "is_init_var": false, "kw_only": false, "line": 2631, "name": "whitespace_after_yield", "type": {".class": "UnionType", "items": ["libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._maybe_sentinel.MaybeSentinel"]}}], "frozen": true}}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression.Yield", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__dataclass_fields__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.Yield.__dataclass_fields__", "name": "__dataclass_fields__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 2}], "type_ref": "dataclasses.Field"}], "type_ref": "builtins.dict"}}, "plugin_generated": true}, "__init__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "value", "lpar", "rpar", "whitespace_after_yield"], "flags": [], "fullname": "libcst._nodes.expression.Yield.__init__", "name": "__init__", "type": {".class": "CallableType", "arg_kinds": [0, 1, 1, 1, 1], "arg_names": ["self", "value", "lpar", "rpar", "whitespace_after_yield"], "arg_types": ["libcst._nodes.expression.Yield", {".class": "UnionType", "items": ["libcst._nodes.expression.BaseExpression", "libcst._nodes.expression.From", {".class": "NoneType"}]}, {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}, {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}, {".class": "UnionType", "items": ["libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._maybe_sentinel.MaybeSentinel"]}], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "__init__ of Yield", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "plugin_generated": true}, "__init__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Yield.__init__", "kind": "Mdef", "plugin_generated": true}, "__match_args__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_ready", "allow_incompatible_override"], "fullname": "libcst._nodes.expression.Yield.__match_args__", "name": "__match_args__", "type": {".class": "TupleType", "implicit": false, "items": [{".class": "LiteralType", "fallback": "builtins.str", "value": "value"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "lpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "rpar"}, {".class": "LiteralType", "fallback": "builtins.str", "value": "whitespace_after_yield"}], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}, "plugin_generated": true}, "__match_args__-redefinition": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.expression.Yield.__match_args__", "kind": "Mdef", "plugin_generated": true}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": [], "fullname": "libcst._nodes.expression.Yield._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression.Yield", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of Yield", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression.Yield._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression.Yield"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of Yield", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_visit_and_replace_children": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "flags": [], "fullname": "libcst._nodes.expression.Yield._visit_and_replace_children", "name": "_visit_and_replace_children", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "visitor"], "arg_types": ["libcst._nodes.expression.Yield", {".class": "TypeAliasType", "args": [], "type_ref": "libcst._visitors.CSTVisitorT"}], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_visit_and_replace_children of Yield", "ret_type": "libcst._nodes.expression.Yield", "type_guard": null, "variables": []}}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Yield.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Yield.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}, "value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Yield.value", "name": "value", "type": {".class": "UnionType", "items": ["libcst._nodes.expression.BaseExpression", "libcst._nodes.expression.From", {".class": "NoneType"}]}}}, "whitespace_after_yield": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression.Yield.whitespace_after_yield", "name": "whitespace_after_yield", "type": {".class": "UnionType", "items": ["libcst._nodes.whitespace.BaseParenthesizableWhitespace", "libcst._maybe_sentinel.MaybeSentinel"]}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_BaseElementImpl": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": ["_codegen_impl", "_visit_and_replace_children"], "bases": ["libcst._nodes.base.CSTNode", "abc.ABC"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression._BaseElementImpl", "name": "_BaseElementImpl", "type_vars": []}, "deletable_attributes": [], "flags": ["is_abstract"], "fullname": "libcst._nodes.expression._BaseElementImpl", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression._BaseElementImpl", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_classvar", "has_explicit_value", "allow_incompatible_override"], "fullname": "libcst._nodes.expression._BaseElementImpl.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}, "_codegen_comma": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "state", "default_comma", "default_comma_whitespace"], "flags": [], "fullname": "libcst._nodes.expression._BaseElementImpl._codegen_comma", "name": "_codegen_comma", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "state", "default_comma", "default_comma_whitespace"], "arg_types": ["libcst._nodes.expression._BaseElementImpl", "libcst._nodes.internal.CodegenState", "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_comma of _BaseElementImpl", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_codegen_impl": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "state", "default_comma", "default_comma_whitespace"], "flags": ["is_decorated", "is_abstract"], "fullname": "libcst._nodes.expression._BaseElementImpl._codegen_impl", "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "state", "default_comma", "default_comma_whitespace"], "arg_types": ["libcst._nodes.expression._BaseElementImpl", "libcst._nodes.internal.CodegenState", "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of _BaseElementImpl", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "_codegen_impl", "type": {".class": "CallableType", "arg_kinds": [0, 0, 1, 1], "arg_names": ["self", "state", "default_comma", "default_comma_whitespace"], "arg_types": ["libcst._nodes.expression._BaseElementImpl", "libcst._nodes.internal.CodegenState", "builtins.bool", "builtins.bool"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_codegen_impl of _BaseElementImpl", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}}, "comma": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression._BaseElementImpl.comma", "name": "comma", "type": {".class": "UnionType", "items": ["libcst._nodes.op.Comma", "libcst._maybe_sentinel.MaybeSentinel"]}}}, "value": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": "libcst._nodes.expression._BaseElementImpl.value", "name": "value", "type": "libcst._nodes.expression.BaseExpression"}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_BaseExpressionWithArgs": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": ["_codegen_impl", "_visit_and_replace_children"], "bases": ["libcst._nodes.expression.BaseExpression", "abc.ABC"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression._BaseExpressionWithArgs", "name": "_BaseExpressionWithArgs", "type_vars": []}, "deletable_attributes": [], "flags": ["is_abstract"], "fullname": "libcst._nodes.expression._BaseExpressionWithArgs", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression._BaseExpressionWithArgs", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_classvar", "has_explicit_value", "allow_incompatible_override"], "fullname": "libcst._nodes.expression._BaseExpressionWithArgs.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}, "_check_kwargs_or_keywords": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "arg"], "flags": [], "fullname": "libcst._nodes.expression._BaseExpressionWithArgs._check_kwargs_or_keywords", "name": "_check_kwargs_or_keywords", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "arg"], "arg_types": ["libcst._nodes.expression._BaseExpressionWithArgs", "libcst._nodes.expression.Arg"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_check_kwargs_or_keywords of _BaseExpressionWithArgs", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "_check_positional": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "arg"], "flags": [], "fullname": "libcst._nodes.expression._BaseExpressionWithArgs._check_positional", "name": "_check_positional", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "arg"], "arg_types": ["libcst._nodes.expression._BaseExpressionWithArgs", "libcst._nodes.expression.Arg"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_check_positional of _BaseExpressionWithArgs", "ret_type": {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": ["libcst._nodes.expression.Arg"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": ["libcst._nodes.expression.Arg"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": ["libcst._nodes.expression.Arg"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}, "type_guard": null, "variables": []}, "type_guard": null, "variables": []}, {".class": "NoneType"}]}, "type_guard": null, "variables": []}}}, "_check_starred_or_keywords": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "arg"], "flags": [], "fullname": "libcst._nodes.expression._BaseExpressionWithArgs._check_starred_or_keywords", "name": "_check_starred_or_keywords", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "arg"], "arg_types": ["libcst._nodes.expression._BaseExpressionWithArgs", "libcst._nodes.expression.Arg"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_check_starred_or_keywords of _BaseExpressionWithArgs", "ret_type": {".class": "UnionType", "items": [{".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": ["libcst._nodes.expression.Arg"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "CallableType", "arg_kinds": [0], "arg_names": [null], "arg_types": ["libcst._nodes.expression.Arg"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": null, "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}, "type_guard": null, "variables": []}, {".class": "NoneType"}]}, "type_guard": null, "variables": []}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression._BaseExpressionWithArgs._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression._BaseExpressionWithArgs"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of _BaseExpressionWithArgs", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "args": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression._BaseExpressionWithArgs.args", "name": "args", "type": {".class": "Instance", "args": ["libcst._nodes.expression.Arg"], "type_ref": "typing.Sequence"}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_BaseParenthesizedNode": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": ["_codegen_impl", "_visit_and_replace_children"], "bases": ["libcst._nodes.base.CSTNode", "abc.ABC"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression._BaseParenthesizedNode", "name": "_BaseParenthesizedNode", "type_vars": []}, "deletable_attributes": [], "flags": ["is_abstract"], "fullname": "libcst._nodes.expression._BaseParenthesizedNode", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_classvar", "has_explicit_value", "allow_incompatible_override"], "fullname": "libcst._nodes.expression._BaseParenthesizedNode.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}, "_parenthesize": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": ["is_generator", "is_decorated"], "fullname": "libcst._nodes.expression._BaseParenthesizedNode._parenthesize", "name": "_parenthesize", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_parenthesize of _BaseParenthesizedNode", "ret_type": {".class": "Instance", "args": [{".class": "NoneType"}, {".class": "NoneType"}, {".class": "NoneType"}], "type_ref": "typing.Generator"}, "type_guard": null, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "_parenthesize", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_parenthesize of _BaseParenthesizedNode", "ret_type": {".class": "Instance", "args": [{".class": "NoneType"}], "type_ref": "contextlib._GeneratorContextManager"}, "type_guard": null, "variables": []}}}}, "_validate": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": [], "fullname": "libcst._nodes.expression._BaseParenthesizedNode._validate", "name": "_validate", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression._BaseParenthesizedNode"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_validate of _BaseParenthesizedNode", "ret_type": {".class": "NoneType"}, "type_guard": null, "variables": []}}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression._BaseParenthesizedNode.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression._BaseParenthesizedNode.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_BasePrefixedString": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": ["_codegen_impl", "_visit_and_replace_children"], "bases": ["libcst._nodes.expression.BaseString", "abc.ABC"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression._BasePrefixedString", "name": "_BasePrefixedString", "type_vars": []}, "deletable_attributes": [], "flags": ["is_abstract"], "fullname": "libcst._nodes.expression._BasePrefixedString", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression._BasePrefixedString", "libcst._nodes.expression.BaseString", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_classvar", "has_explicit_value", "allow_incompatible_override"], "fullname": "libcst._nodes.expression._BasePrefixedString.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}, "_safe_to_use_with_word_operator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "flags": [], "fullname": "libcst._nodes.expression._BasePrefixedString._safe_to_use_with_word_operator", "name": "_safe_to_use_with_word_operator", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "arg_types": ["libcst._nodes.expression._BasePrefixedString", "libcst._nodes.expression.ExpressionPosition"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_safe_to_use_with_word_operator of _BasePrefixedString", "ret_type": "builtins.bool", "type_guard": null, "variables": []}}}, "prefix": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "libcst._nodes.expression._BasePrefixedString.prefix", "name": "prefix", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression._BasePrefixedString"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "prefix of _BasePrefixedString", "ret_type": "builtins.str", "type_guard": null, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "prefix", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression._BasePrefixedString"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "prefix of _BasePrefixedString", "ret_type": "builtins.str", "type_guard": null, "variables": []}}}}, "quote": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0], "arg_names": ["self"], "flags": ["is_property", "is_decorated"], "fullname": "libcst._nodes.expression._BasePrefixedString.quote", "name": "quote", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression._BasePrefixedString"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "quote of _BasePrefixedString", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "libcst._nodes.expression.StringQuoteLiteral"}, "type_guard": null, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_property", "is_ready"], "fullname": null, "name": "quote", "type": {".class": "CallableType", "arg_kinds": [0], "arg_names": ["self"], "arg_types": ["libcst._nodes.expression._BasePrefixedString"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "quote of _BasePrefixedString", "ret_type": {".class": "TypeAliasType", "args": [], "type_ref": "libcst._nodes.expression.StringQuoteLiteral"}, "type_guard": null, "variables": []}}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "_BaseSetOrDict": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "TypeInfo", "_promote": null, "abstract_attributes": ["_codegen_impl", "_visit_and_replace_children"], "bases": ["libcst._nodes.expression.BaseExpression", "abc.ABC"], "declared_metaclass": null, "defn": {".class": "ClassDef", "fullname": "libcst._nodes.expression._BaseSetOrDict", "name": "_BaseSetOrDict", "type_vars": []}, "deletable_attributes": [], "flags": ["is_abstract"], "fullname": "libcst._nodes.expression._BaseSetOrDict", "has_param_spec_type": false, "metaclass_type": "abc.ABCMeta", "metadata": {}, "module_name": "libcst._nodes.expression", "mro": ["libcst._nodes.expression._BaseSetOrDict", "libcst._nodes.expression.BaseExpression", "libcst._nodes.expression._BaseParenthesizedNode", "libcst._nodes.base.CSTNode", "abc.ABC", "builtins.object"], "names": {".class": "SymbolTable", "__slots__": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_classvar", "has_explicit_value", "allow_incompatible_override"], "fullname": "libcst._nodes.expression._BaseSetOrDict.__slots__", "name": "__slots__", "type": {".class": "TupleType", "implicit": false, "items": [], "partial_fallback": {".class": "Instance", "args": [{".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.tuple"}}}}, "_braceize": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Decorator", "func": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "flags": ["is_generator", "is_decorated"], "fullname": "libcst._nodes.expression._BaseSetOrDict._braceize", "name": "_braceize", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression._BaseSetOrDict", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_braceize of _BaseSetOrDict", "ret_type": {".class": "Instance", "args": [{".class": "NoneType"}, {".class": "NoneType"}, {".class": "NoneType"}], "type_ref": "typing.Generator"}, "type_guard": null, "variables": []}}, "is_overload": false, "var": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready"], "fullname": null, "name": "_braceize", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "state"], "arg_types": ["libcst._nodes.expression._BaseSetOrDict", "libcst._nodes.internal.CodegenState"], "bound_args": [], "def_extras": {}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_braceize of _BaseSetOrDict", "ret_type": {".class": "Instance", "args": [{".class": "NoneType"}], "type_ref": "contextlib._GeneratorContextManager"}, "type_guard": null, "variables": []}}}}, "_safe_to_use_with_word_operator": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "FuncDef", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "flags": [], "fullname": "libcst._nodes.expression._BaseSetOrDict._safe_to_use_with_word_operator", "name": "_safe_to_use_with_word_operator", "type": {".class": "CallableType", "arg_kinds": [0, 0], "arg_names": ["self", "position"], "arg_types": ["libcst._nodes.expression._BaseSetOrDict", "libcst._nodes.expression.ExpressionPosition"], "bound_args": [], "def_extras": {"first_arg": "self"}, "fallback": "builtins.function", "from_concatenate": false, "implicit": false, "is_ellipsis_args": false, "name": "_safe_to_use_with_word_operator of _BaseSetOrDict", "ret_type": "builtins.bool", "type_guard": null, "variables": []}}}, "lbrace": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression._BaseSetOrDict.lbrace", "name": "lbrace", "type": "libcst._nodes.expression.LeftCurlyBrace"}}, "lpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression._BaseSetOrDict.lpar", "name": "lpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.LeftParen"], "type_ref": "typing.Sequence"}}}, "rbrace": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression._BaseSetOrDict.rbrace", "name": "rbrace", "type": "libcst._nodes.expression.RightCurlyBrace"}}, "rpar": {".class": "SymbolTableNode", "kind": "Mdef", "node": {".class": "Var", "flags": ["is_initialized_in_class", "is_ready", "has_explicit_value"], "fullname": "libcst._nodes.expression._BaseSetOrDict.rpar", "name": "rpar", "type": {".class": "Instance", "args": ["libcst._nodes.expression.RightParen"], "type_ref": "typing.Sequence"}}}}, "slots": null, "tuple_type": null, "type_vars": [], "typeddict_type": null}}, "__annotations__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.__annotations__", "name": "__annotations__", "type": {".class": "Instance", "args": ["builtins.str", {".class": "AnyType", "missing_import_name": null, "source_any": null, "type_of_any": 6}], "type_ref": "builtins.dict"}}}, "__doc__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.__doc__", "name": "__doc__", "type": "builtins.str"}}, "__file__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.__file__", "name": "__file__", "type": "builtins.str"}}, "__name__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.__name__", "name": "__name__", "type": "builtins.str"}}, "__package__": {".class": "SymbolTableNode", "kind": "Gdef", "node": {".class": "Var", "flags": ["is_ready"], "fullname": "libcst._nodes.expression.__package__", "name": "__package__", "type": "builtins.str"}}, "abstractmethod": {".class": "SymbolTableNode", "cross_ref": "abc.abstractmethod", "kind": "Gdef"}, "add_slots": {".class": "SymbolTableNode", "cross_ref": "libcst._add_slots.add_slots", "kind": "Gdef"}, "auto": {".class": "SymbolTableNode", "cross_ref": "enum.auto", "kind": "Gdef"}, "contextmanager": {".class": "SymbolTableNode", "cross_ref": "contextlib.contextmanager", "kind": "Gdef"}, "dataclass": {".class": "SymbolTableNode", "cross_ref": "dataclasses.dataclass", "kind": "Gdef"}, "field": {".class": "SymbolTableNode", "cross_ref": "dataclasses.field", "kind": "Gdef"}, "literal_eval": {".class": "SymbolTableNode", "cross_ref": "ast.literal_eval", "kind": "Gdef"}, "re": {".class": "SymbolTableNode", "cross_ref": "re", "kind": "Gdef"}, "visit_optional": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.internal.visit_optional", "kind": "Gdef"}, "visit_required": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.internal.visit_required", "kind": "Gdef"}, "visit_sentinel": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.internal.visit_sentinel", "kind": "Gdef"}, "visit_sequence": {".class": "SymbolTableNode", "cross_ref": "libcst._nodes.internal.visit_sequence", "kind": "Gdef"}}, "path": "/Users/christopherdecarolis/.pyenv/versions/3.8.6/envs/internal-workenv-3.8.6/lib/python3.8/site-packages/libcst/_nodes/expression.py"}